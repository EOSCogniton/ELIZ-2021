% Autogenerated file: Tue Mar  1 18:01:24 2022
function writeCodeInfoFcn


% Load a ComponentInterface object from IR
codeIRInfoStruct = load('C:\Users\Thibault NOUVELLON\Documents\EPSA\Github\ELIZ-2021\EL_Electrical\Autre\Vehicule Control Unit\FIchiers simulink\Nouveau dossier\VCU_TDN_MPC5644A_rtw\tlc\codeIRInfo.mat');
codeInfo = codeIRInfoStruct.codeInfo;





wr = coder.internal.writeMF0DataInterfacesToCodeDescriptor("VCU_TDN","C:\Users\Thibault NOUVELLON\Documents\EPSA\Github\ELIZ-2021\EL_Electrical\Autre\Vehicule Control Unit\FIchiers simulink\Nouveau dossier\VCU_TDN_MPC5644A_rtw") ;
wr.writeName(codeInfo.Name);
fr = wr;



skippedParameters = [];



        checkDataGraphicalNames(codeInfo.Parameters(1).GraphicalName, 'T_IGBT_conversion_bp');      


      
                
% Built-In Type: 4
Type_4_R1_V1_C0 = coder.types.Int(16,1);
  Type_4_R1_V1_C0.Name = 'int16';
  Type_4_R1_V1_C0.Identifier = 'int16_T';
  Type_4_R1_V1_C0.ReadOnly   = 1;
  Type_4_R1_V1_C0.Volatile   = 1;
    
  % Matrix Type
  Type_39_R1_V1_C0 = coder.types.Matrix;
  Type_39_R1_V1_C0.BaseType   = Type_4_R1_V1_C0;
    Type_39_R1_V1_C0.Dimensions = [1, 39];
          
  % Matrix Type
  Type_38_R1_V1_C0 = coder.types.Matrix;
  Type_38_R1_V1_C0.BaseType   = Type_4_R1_V1_C0;
    Type_38_R1_V1_C0.Dimensions = [39];
        
% Variable: Var_Par0
Var_Par0 = RTW.Variable(Type_39_R1_V1_C0, 'T_IGBT_conversion_bp');
    Var_Par0.Owner           = 'VCU_TDN';
    Var_Par0.DeclarationFile = 'VCU_TDN.h';
    Var_Par0.DefinitionFile  = 'VCU_TDN.c';
    
              Var_Par0.StorageSpecifier = 'extern';
    
    % Setting Parameter#1's implementation  
    codeInfo.Parameters(1).Implementation = Var_Par0;
    codeInfo.Parameters(1).Implementation.CodeType = Type_38_R1_V1_C0;
    wr.writeParameter(Var_Par0, codeInfo.Parameters(1).GraphicalName);



        checkDataGraphicalNames(codeInfo.Parameters(2).GraphicalName, 'T_IGBT_conversion_cur');      


      
    
% Variable: Var_Par1
Var_Par1 = RTW.Variable(Type_39_R1_V1_C0, 'T_IGBT_conversion_cur');
    Var_Par1.Owner           = 'VCU_TDN';
    Var_Par1.DeclarationFile = 'VCU_TDN.h';
    Var_Par1.DefinitionFile  = 'VCU_TDN.c';
    
              Var_Par1.StorageSpecifier = 'extern';
    
    % Setting Parameter#2's implementation  
    codeInfo.Parameters(2).Implementation = Var_Par1;
    codeInfo.Parameters(2).Implementation.CodeType = Type_38_R1_V1_C0;
    wr.writeParameter(Var_Par1, codeInfo.Parameters(2).GraphicalName);



        checkDataGraphicalNames(codeInfo.Parameters(3).GraphicalName, 'T_air_conversion_bp');      


      
      
  % Matrix Type
  Type_41_R1_V1_C0 = coder.types.Matrix;
  Type_41_R1_V1_C0.BaseType   = Type_4_R1_V1_C0;
    Type_41_R1_V1_C0.Dimensions = [1, 29];
          
  % Matrix Type
  Type_40_R1_V1_C0 = coder.types.Matrix;
  Type_40_R1_V1_C0.BaseType   = Type_4_R1_V1_C0;
    Type_40_R1_V1_C0.Dimensions = [29];
        
% Variable: Var_Par2
Var_Par2 = RTW.Variable(Type_41_R1_V1_C0, 'T_air_conversion_bp');
    Var_Par2.Owner           = 'VCU_TDN';
    Var_Par2.DeclarationFile = 'VCU_TDN.h';
    Var_Par2.DefinitionFile  = 'VCU_TDN.c';
    
              Var_Par2.StorageSpecifier = 'extern';
    
    % Setting Parameter#3's implementation  
    codeInfo.Parameters(3).Implementation = Var_Par2;
    codeInfo.Parameters(3).Implementation.CodeType = Type_40_R1_V1_C0;
    wr.writeParameter(Var_Par2, codeInfo.Parameters(3).GraphicalName);



        checkDataGraphicalNames(codeInfo.Parameters(4).GraphicalName, 'T_air_conversion_cur');      


      
    
% Variable: Var_Par3
Var_Par3 = RTW.Variable(Type_41_R1_V1_C0, 'T_air_conversion_cur');
    Var_Par3.Owner           = 'VCU_TDN';
    Var_Par3.DeclarationFile = 'VCU_TDN.h';
    Var_Par3.DefinitionFile  = 'VCU_TDN.c';
    
              Var_Par3.StorageSpecifier = 'extern';
    
    % Setting Parameter#4's implementation  
    codeInfo.Parameters(4).Implementation = Var_Par3;
    codeInfo.Parameters(4).Implementation.CodeType = Type_40_R1_V1_C0;
    wr.writeParameter(Var_Par3, codeInfo.Parameters(4).GraphicalName);



        checkDataGraphicalNames(codeInfo.Parameters(5).GraphicalName, 'T_motor_conversion_bp');      


      
    
% Variable: Var_Par4
Var_Par4 = RTW.Variable(Type_39_R1_V1_C0, 'T_motor_conversion_bp');
    Var_Par4.Owner           = 'VCU_TDN';
    Var_Par4.DeclarationFile = 'VCU_TDN.h';
    Var_Par4.DefinitionFile  = 'VCU_TDN.c';
    
              Var_Par4.StorageSpecifier = 'extern';
    
    % Setting Parameter#5's implementation  
    codeInfo.Parameters(5).Implementation = Var_Par4;
    codeInfo.Parameters(5).Implementation.CodeType = Type_38_R1_V1_C0;
    wr.writeParameter(Var_Par4, codeInfo.Parameters(5).GraphicalName);



        checkDataGraphicalNames(codeInfo.Parameters(6).GraphicalName, 'T_motor_conversion_cur');      


      
    
% Variable: Var_Par5
Var_Par5 = RTW.Variable(Type_39_R1_V1_C0, 'T_motor_conversion_cur');
    Var_Par5.Owner           = 'VCU_TDN';
    Var_Par5.DeclarationFile = 'VCU_TDN.h';
    Var_Par5.DefinitionFile  = 'VCU_TDN.c';
    
              Var_Par5.StorageSpecifier = 'extern';
    
    % Setting Parameter#6's implementation  
    codeInfo.Parameters(6).Implementation = Var_Par5;
    codeInfo.Parameters(6).Implementation.CodeType = Type_38_R1_V1_C0;
    wr.writeParameter(Var_Par5, codeInfo.Parameters(6).GraphicalName);



        checkDataGraphicalNames(codeInfo.Parameters(7).GraphicalName, 'Vdc_bus_V_bp');      


      
      
  % Matrix Type
  Type_43_R1_V1_C0 = coder.types.Matrix;
  Type_43_R1_V1_C0.BaseType   = Type_4_R1_V1_C0;
    Type_43_R1_V1_C0.Dimensions = [1, 42];
          
  % Matrix Type
  Type_42_R1_V1_C0 = coder.types.Matrix;
  Type_42_R1_V1_C0.BaseType   = Type_4_R1_V1_C0;
    Type_42_R1_V1_C0.Dimensions = [42];
        
% Variable: Var_Par6
Var_Par6 = RTW.Variable(Type_43_R1_V1_C0, 'Vdc_bus_V_bp');
    Var_Par6.Owner           = 'VCU_TDN';
    Var_Par6.DeclarationFile = 'VCU_TDN.h';
    Var_Par6.DefinitionFile  = 'VCU_TDN.c';
    
              Var_Par6.StorageSpecifier = 'extern';
    
    % Setting Parameter#7's implementation  
    codeInfo.Parameters(7).Implementation = Var_Par6;
    codeInfo.Parameters(7).Implementation.CodeType = Type_42_R1_V1_C0;
    wr.writeParameter(Var_Par6, codeInfo.Parameters(7).GraphicalName);



        checkDataGraphicalNames(codeInfo.Parameters(8).GraphicalName, 'Vdc_bus_V_cur');      


      
    
% Variable: Var_Par7
Var_Par7 = RTW.Variable(Type_43_R1_V1_C0, 'Vdc_bus_V_cur');
    Var_Par7.Owner           = 'VCU_TDN';
    Var_Par7.DeclarationFile = 'VCU_TDN.h';
    Var_Par7.DefinitionFile  = 'VCU_TDN.c';
    
              Var_Par7.StorageSpecifier = 'extern';
    
    % Setting Parameter#8's implementation  
    codeInfo.Parameters(8).Implementation = Var_Par7;
    codeInfo.Parameters(8).Implementation.CodeType = Type_42_R1_V1_C0;
    wr.writeParameter(Var_Par7, codeInfo.Parameters(8).GraphicalName);

  tmpParams = [];


          
% Built-In Type: 1
Type_1_R0_V0_C0 = coder.types.Single;
  Type_1_R0_V0_C0.Name = 'single';
  Type_1_R0_V0_C0.Identifier = 'real32_T';
  Type_1_R0_V0_C0.ReadOnly   = 0;
  Type_1_R0_V0_C0.Volatile   = 0;
        
% Variable: Var_DW0
Var_DW0 = RTW.Variable(Type_1_R0_V0_C0, 'nvmAPPS_M');
    Var_DW0.Owner           = '';
    Var_DW0.DeclarationFile = '';
    
            Var_DW0.StorageSpecifier = 'extern';
    
    % Setting DataStore#1's  implementation    
    codeInfo.DataStores(1).Implementation = Var_DW0;
    wr.writeDataStore(Var_DW0, codeInfo.DataStores(1));
          
% Built-In Type: 4
Type_4_R0_V0_C0 = coder.types.Int(16,1);
  Type_4_R0_V0_C0.Name = 'int16';
  Type_4_R0_V0_C0.Identifier = 'int16_T';
  Type_4_R0_V0_C0.ReadOnly   = 0;
  Type_4_R0_V0_C0.Volatile   = 0;
        
% Variable: Var_DW1
Var_DW1 = RTW.Variable(Type_4_R0_V0_C0, 'nvmI_200');
    Var_DW1.Owner           = '';
    Var_DW1.DeclarationFile = '';
    
            Var_DW1.StorageSpecifier = 'extern';
    
    % Setting DataStore#2's  implementation    
    codeInfo.DataStores(2).Implementation = Var_DW1;
    wr.writeDataStore(Var_DW1, codeInfo.DataStores(2));
    
% Variable: Var_DW2
Var_DW2 = RTW.Variable(Type_4_R0_V0_C0, 'nvmI_act_filt');
    Var_DW2.Owner           = '';
    Var_DW2.DeclarationFile = '';
    
            Var_DW2.StorageSpecifier = 'extern';
    
    % Setting DataStore#3's  implementation    
    codeInfo.DataStores(3).Implementation = Var_DW2;
    wr.writeDataStore(Var_DW2, codeInfo.DataStores(3));
    
% Variable: Var_DW3
Var_DW3 = RTW.Variable(Type_4_R0_V0_C0, 'nvmI_cmd');
    Var_DW3.Owner           = '';
    Var_DW3.DeclarationFile = '';
    
            Var_DW3.StorageSpecifier = 'extern';
    
    % Setting DataStore#4's  implementation    
    codeInfo.DataStores(4).Implementation = Var_DW3;
    wr.writeDataStore(Var_DW3, codeInfo.DataStores(4));
    
% Variable: Var_DW4
Var_DW4 = RTW.Variable(Type_4_R0_V0_C0, 'nvmI_device');
    Var_DW4.Owner           = '';
    Var_DW4.DeclarationFile = '';
    
            Var_DW4.StorageSpecifier = 'extern';
    
    % Setting DataStore#5's  implementation    
    codeInfo.DataStores(5).Implementation = Var_DW4;
    wr.writeDataStore(Var_DW4, codeInfo.DataStores(5));
    
% Variable: Var_DW5
Var_DW5 = RTW.Variable(Type_4_R0_V0_C0, 'nvmI_max_eff');
    Var_DW5.Owner           = '';
    Var_DW5.DeclarationFile = '';
    
            Var_DW5.StorageSpecifier = 'extern';
    
    % Setting DataStore#6's  implementation    
    codeInfo.DataStores(6).Implementation = Var_DW5;
    wr.writeDataStore(Var_DW5, codeInfo.DataStores(6));
    
% Variable: Var_DW6
Var_DW6 = RTW.Variable(Type_4_R0_V0_C0, 'nvmI_max_pk');
    Var_DW6.Owner           = '';
    Var_DW6.DeclarationFile = '';
    
            Var_DW6.StorageSpecifier = 'extern';
    
    % Setting DataStore#7's  implementation    
    codeInfo.DataStores(7).Implementation = Var_DW6;
    wr.writeDataStore(Var_DW6, codeInfo.DataStores(7));
    
% Variable: Var_DW7
Var_DW7 = RTW.Variable(Type_4_R0_V0_C0, 'nvmI_nom_eff');
    Var_DW7.Owner           = '';
    Var_DW7.DeclarationFile = '';
    
            Var_DW7.StorageSpecifier = 'extern';
    
    % Setting DataStore#8's  implementation    
    codeInfo.DataStores(8).Implementation = Var_DW7;
    wr.writeDataStore(Var_DW7, codeInfo.DataStores(8));
    
% Variable: Var_DW8
Var_DW8 = RTW.Variable(Type_4_R0_V0_C0, 'nvmM_R_Acc');
    Var_DW8.Owner           = '';
    Var_DW8.DeclarationFile = '';
    
            Var_DW8.StorageSpecifier = 'extern';
    
    % Setting DataStore#9's  implementation    
    codeInfo.DataStores(9).Implementation = Var_DW8;
    wr.writeDataStore(Var_DW8, codeInfo.DataStores(9));
    
% Variable: Var_DW9
Var_DW9 = RTW.Variable(Type_4_R0_V0_C0, 'nvmM_R_Dec');
    Var_DW9.Owner           = '';
    Var_DW9.DeclarationFile = '';
    
            Var_DW9.StorageSpecifier = 'extern';
    
    % Setting DataStore#10's  implementation    
    codeInfo.DataStores(10).Implementation = Var_DW9;
    wr.writeDataStore(Var_DW9, codeInfo.DataStores(10));
    
% Variable: Var_DW10
Var_DW10 = RTW.Variable(Type_4_R0_V0_C0, 'nvmN_R_Acc');
    Var_DW10.Owner           = '';
    Var_DW10.DeclarationFile = '';
    
            Var_DW10.StorageSpecifier = 'extern';
    
    % Setting DataStore#11's  implementation    
    codeInfo.DataStores(11).Implementation = Var_DW10;
    wr.writeDataStore(Var_DW10, codeInfo.DataStores(11));
    
% Variable: Var_DW11
Var_DW11 = RTW.Variable(Type_4_R0_V0_C0, 'nvmN_R_Dec');
    Var_DW11.Owner           = '';
    Var_DW11.DeclarationFile = '';
    
            Var_DW11.StorageSpecifier = 'extern';
    
    % Setting DataStore#12's  implementation    
    codeInfo.DataStores(12).Implementation = Var_DW11;
    wr.writeDataStore(Var_DW11, codeInfo.DataStores(12));
    
% Variable: Var_DW12
Var_DW12 = RTW.Variable(Type_4_R0_V0_C0, 'nvmN_act_filt');
    Var_DW12.Owner           = '';
    Var_DW12.DeclarationFile = '';
    
            Var_DW12.StorageSpecifier = 'extern';
    
    % Setting DataStore#13's  implementation    
    codeInfo.DataStores(13).Implementation = Var_DW12;
    wr.writeDataStore(Var_DW12, codeInfo.DataStores(13));
    
% Variable: Var_DW13
Var_DW13 = RTW.Variable(Type_4_R0_V0_C0, 'nvmN_lim_neg');
    Var_DW13.Owner           = '';
    Var_DW13.DeclarationFile = '';
    
            Var_DW13.StorageSpecifier = 'extern';
    
    % Setting DataStore#14's  implementation    
    codeInfo.DataStores(14).Implementation = Var_DW13;
    wr.writeDataStore(Var_DW13, codeInfo.DataStores(14));
    
% Variable: Var_DW14
Var_DW14 = RTW.Variable(Type_4_R0_V0_C0, 'nvmN_lim_pos');
    Var_DW14.Owner           = '';
    Var_DW14.DeclarationFile = '';
    
            Var_DW14.StorageSpecifier = 'extern';
    
    % Setting DataStore#15's  implementation    
    codeInfo.DataStores(15).Implementation = Var_DW14;
    wr.writeDataStore(Var_DW14, codeInfo.DataStores(15));
    
% Variable: Var_DW15
Var_DW15 = RTW.Variable(Type_4_R0_V0_C0, 'nvmSpeedRPMmax');
    Var_DW15.Owner           = '';
    Var_DW15.DeclarationFile = '';
    
            Var_DW15.StorageSpecifier = 'extern';
    
    % Setting DataStore#16's  implementation    
    codeInfo.DataStores(16).Implementation = Var_DW15;
    wr.writeDataStore(Var_DW15, codeInfo.DataStores(16));
    
% Variable: Var_DW16
Var_DW16 = RTW.Variable(Type_4_R0_V0_C0, 'nvmT_IGBT');
    Var_DW16.Owner           = '';
    Var_DW16.DeclarationFile = '';
    
            Var_DW16.StorageSpecifier = 'extern';
    
    % Setting DataStore#17's  implementation    
    codeInfo.DataStores(17).Implementation = Var_DW16;
    wr.writeDataStore(Var_DW16, codeInfo.DataStores(17));
    
% Variable: Var_DW17
Var_DW17 = RTW.Variable(Type_4_R0_V0_C0, 'nvmT_air');
    Var_DW17.Owner           = '';
    Var_DW17.DeclarationFile = '';
    
            Var_DW17.StorageSpecifier = 'extern';
    
    % Setting DataStore#18's  implementation    
    codeInfo.DataStores(18).Implementation = Var_DW17;
    wr.writeDataStore(Var_DW17, codeInfo.DataStores(18));
    
% Variable: Var_DW18
Var_DW18 = RTW.Variable(Type_4_R0_V0_C0, 'nvmT_motor');
    Var_DW18.Owner           = '';
    Var_DW18.DeclarationFile = '';
    
            Var_DW18.StorageSpecifier = 'extern';
    
    % Setting DataStore#19's  implementation    
    codeInfo.DataStores(19).Implementation = Var_DW18;
    wr.writeDataStore(Var_DW18, codeInfo.DataStores(19));
    
% Variable: Var_DW19
Var_DW19 = RTW.Variable(Type_4_R0_V0_C0, 'nvmVdc_bus');
    Var_DW19.Owner           = '';
    Var_DW19.DeclarationFile = '';
    
            Var_DW19.StorageSpecifier = 'extern';
    
    % Setting DataStore#20's  implementation    
    codeInfo.DataStores(20).Implementation = Var_DW19;
    wr.writeDataStore(Var_DW19, codeInfo.DataStores(20));
    
% Variable: Var_DW20
Var_DW20 = RTW.Variable(Type_4_R0_V0_C0, 'nvmI_act_filt_A');
    Var_DW20.Owner           = '';
    Var_DW20.DeclarationFile = '';
    
            Var_DW20.StorageSpecifier = 'extern';
    
    % Setting DataStore#21's  implementation    
    codeInfo.DataStores(21).Implementation = Var_DW20;
    wr.writeDataStore(Var_DW20, codeInfo.DataStores(21));
    
% Variable: Var_DW21
Var_DW21 = RTW.Variable(Type_4_R0_V0_C0, 'nvmN_act_filt_RPM');
    Var_DW21.Owner           = '';
    Var_DW21.DeclarationFile = '';
    
            Var_DW21.StorageSpecifier = 'extern';
    
    % Setting DataStore#22's  implementation    
    codeInfo.DataStores(22).Implementation = Var_DW21;
    wr.writeDataStore(Var_DW21, codeInfo.DataStores(22));
    
% Variable: Var_DW22
Var_DW22 = RTW.Variable(Type_4_R0_V0_C0, 'nvmSpeed');
    Var_DW22.Owner           = '';
    Var_DW22.DeclarationFile = '';
    
            Var_DW22.StorageSpecifier = 'extern';
    
    % Setting DataStore#23's  implementation    
    codeInfo.DataStores(23).Implementation = Var_DW22;
    wr.writeDataStore(Var_DW22, codeInfo.DataStores(23));
    
% Variable: Var_DW23
Var_DW23 = RTW.Variable(Type_4_R0_V0_C0, 'nvmT_IGBT_deg');
    Var_DW23.Owner           = '';
    Var_DW23.DeclarationFile = '';
    
            Var_DW23.StorageSpecifier = 'extern';
    
    % Setting DataStore#24's  implementation    
    codeInfo.DataStores(24).Implementation = Var_DW23;
    wr.writeDataStore(Var_DW23, codeInfo.DataStores(24));
    
% Variable: Var_DW24
Var_DW24 = RTW.Variable(Type_4_R0_V0_C0, 'nvmT_air_deg');
    Var_DW24.Owner           = '';
    Var_DW24.DeclarationFile = '';
    
            Var_DW24.StorageSpecifier = 'extern';
    
    % Setting DataStore#25's  implementation    
    codeInfo.DataStores(25).Implementation = Var_DW24;
    wr.writeDataStore(Var_DW24, codeInfo.DataStores(25));
    
% Variable: Var_DW25
Var_DW25 = RTW.Variable(Type_4_R0_V0_C0, 'nvmT_motor_deg');
    Var_DW25.Owner           = '';
    Var_DW25.DeclarationFile = '';
    
            Var_DW25.StorageSpecifier = 'extern';
    
    % Setting DataStore#26's  implementation    
    codeInfo.DataStores(26).Implementation = Var_DW25;
    wr.writeDataStore(Var_DW25, codeInfo.DataStores(26));
    
% Variable: Var_DW26
Var_DW26 = RTW.Variable(Type_4_R0_V0_C0, 'nvmVdc_bus_V');
    Var_DW26.Owner           = '';
    Var_DW26.DeclarationFile = '';
    
            Var_DW26.StorageSpecifier = 'extern';
    
    % Setting DataStore#27's  implementation    
    codeInfo.DataStores(27).Implementation = Var_DW26;
    wr.writeDataStore(Var_DW26, codeInfo.DataStores(27));
          
% Built-In Type: 5
Type_5_R0_V0_C0 = coder.types.Int(16,0);
  Type_5_R0_V0_C0.Name = 'uint16';
  Type_5_R0_V0_C0.Identifier = 'uint16_T';
  Type_5_R0_V0_C0.ReadOnly   = 0;
  Type_5_R0_V0_C0.Volatile   = 0;
        
% Variable: Var_DW27
Var_DW27 = RTW.Variable(Type_5_R0_V0_C0, 'nvmAPPS_1');
    Var_DW27.Owner           = '';
    Var_DW27.DeclarationFile = '';
    
            Var_DW27.StorageSpecifier = 'extern';
    
    % Setting DataStore#28's  implementation    
    codeInfo.DataStores(28).Implementation = Var_DW27;
    wr.writeDataStore(Var_DW27, codeInfo.DataStores(28));
    
% Variable: Var_DW28
Var_DW28 = RTW.Variable(Type_5_R0_V0_C0, 'nvmAPPS_2');
    Var_DW28.Owner           = '';
    Var_DW28.DeclarationFile = '';
    
            Var_DW28.StorageSpecifier = 'extern';
    
    % Setting DataStore#29's  implementation    
    codeInfo.DataStores(29).Implementation = Var_DW28;
    wr.writeDataStore(Var_DW28, codeInfo.DataStores(29));
    
% Variable: Var_DW29
Var_DW29 = RTW.Variable(Type_5_R0_V0_C0, 'nvmN_100');
    Var_DW29.Owner           = '';
    Var_DW29.DeclarationFile = '';
    
            Var_DW29.StorageSpecifier = 'extern';
    
    % Setting DataStore#30's  implementation    
    codeInfo.DataStores(30).Implementation = Var_DW29;
    wr.writeDataStore(Var_DW29, codeInfo.DataStores(30));
    
% Variable: Var_DW30
Var_DW30 = RTW.Variable(Type_5_R0_V0_C0, 'nvmN_lim');
    Var_DW30.Owner           = '';
    Var_DW30.DeclarationFile = '';
    
            Var_DW30.StorageSpecifier = 'extern';
    
    % Setting DataStore#31's  implementation    
    codeInfo.DataStores(31).Implementation = Var_DW30;
    wr.writeDataStore(Var_DW30, codeInfo.DataStores(31));
          
% Built-In Type: 8
 Type_8_R0_V0_C0 = coder.types.Bool;
  Type_8_R0_V0_C0.Name = 'boolean';
  Type_8_R0_V0_C0.Identifier = 'boolean_T';
  Type_8_R0_V0_C0.ReadOnly   = 0;
  Type_8_R0_V0_C0.Volatile   = 0;
        
% Variable: Var_DW31
Var_DW31 = RTW.Variable(Type_8_R0_V0_C0, 'nvmAPPS_FAULT');
    Var_DW31.Owner           = '';
    Var_DW31.DeclarationFile = '';
    
            Var_DW31.StorageSpecifier = 'extern';
    
    % Setting DataStore#32's  implementation    
    codeInfo.DataStores(32).Implementation = Var_DW31;
    wr.writeDataStore(Var_DW31, codeInfo.DataStores(32));
    
% Variable: Var_DW32
Var_DW32 = RTW.Variable(Type_8_R0_V0_C0, 'nvmBRK_CONTACTOR');
    Var_DW32.Owner           = '';
    Var_DW32.DeclarationFile = '';
    
            Var_DW32.StorageSpecifier = 'extern';
    
    % Setting DataStore#33's  implementation    
    codeInfo.DataStores(33).Implementation = Var_DW32;
    wr.writeDataStore(Var_DW32, codeInfo.DataStores(33));
    
% Variable: Var_DW33
Var_DW33 = RTW.Variable(Type_8_R0_V0_C0, 'nvmBRK_PDL_FAULT');
    Var_DW33.Owner           = '';
    Var_DW33.DeclarationFile = '';
    
            Var_DW33.StorageSpecifier = 'extern';
    
    % Setting DataStore#34's  implementation    
    codeInfo.DataStores(34).Implementation = Var_DW33;
    wr.writeDataStore(Var_DW33, codeInfo.DataStores(34));
    
% Variable: Var_DW34
Var_DW34 = RTW.Variable(Type_8_R0_V0_C0, 'nvmRDY_DRV');
    Var_DW34.Owner           = '';
    Var_DW34.DeclarationFile = '';
    
            Var_DW34.StorageSpecifier = 'extern';
    
    % Setting DataStore#35's  implementation    
    codeInfo.DataStores(35).Implementation = Var_DW34;
    wr.writeDataStore(Var_DW34, codeInfo.DataStores(35));
    
% Variable: Var_DW35
Var_DW35 = RTW.Variable(Type_8_R0_V0_C0, 'nvmRDY_DRV_BUTTON');
    Var_DW35.Owner           = '';
    Var_DW35.DeclarationFile = '';
    
            Var_DW35.StorageSpecifier = 'extern';
    
    % Setting DataStore#36's  implementation    
    codeInfo.DataStores(36).Implementation = Var_DW35;
    wr.writeDataStore(Var_DW35, codeInfo.DataStores(36));
    
% Variable: Var_DW36
Var_DW36 = RTW.Variable(Type_8_R0_V0_C0, 'nvmBATT_FAN_ON');
    Var_DW36.Owner           = '';
    Var_DW36.DeclarationFile = '';
    
            Var_DW36.StorageSpecifier = 'extern';
    
    % Setting DataStore#37's  implementation    
    codeInfo.DataStores(37).Implementation = Var_DW36;
    wr.writeDataStore(Var_DW36, codeInfo.DataStores(37));
    
% Variable: Var_DW37
Var_DW37 = RTW.Variable(Type_8_R0_V0_C0, 'nvmFAN_ON');
    Var_DW37.Owner           = '';
    Var_DW37.DeclarationFile = '';
    
            Var_DW37.StorageSpecifier = 'extern';
    
    % Setting DataStore#38's  implementation    
    codeInfo.DataStores(38).Implementation = Var_DW37;
    wr.writeDataStore(Var_DW37, codeInfo.DataStores(38));
    
% Variable: Var_DW38
Var_DW38 = RTW.Variable(Type_8_R0_V0_C0, 'nvmPUMP_ON');
    Var_DW38.Owner           = '';
    Var_DW38.DeclarationFile = '';
    
            Var_DW38.StorageSpecifier = 'extern';
    
    % Setting DataStore#39's  implementation    
    codeInfo.DataStores(39).Implementation = Var_DW38;
    wr.writeDataStore(Var_DW38, codeInfo.DataStores(39));


              


    
% Variable: Var_APPS_M
Var_APPS_M = RTW.Variable(Type_1_R0_V0_C0, 'APPS_M');
    Var_APPS_M.Owner           = 'VCU_TDN';
    Var_APPS_M.DeclarationFile = 'VCU_TDN.h';
    Var_APPS_M.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_APPS_M.StorageSpecifier = 'extern';
            Var_APPS_M.CodeType = Type_1_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_APPS_M, 0);

              


    
% Variable: Var_FR_BRK_PRESSURE
Var_FR_BRK_PRESSURE = RTW.Variable(Type_1_R0_V0_C0, 'FR_BRK_PRESSURE');
    Var_FR_BRK_PRESSURE.Owner           = 'VCU_TDN';
    Var_FR_BRK_PRESSURE.DeclarationFile = 'VCU_TDN.h';
    Var_FR_BRK_PRESSURE.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_FR_BRK_PRESSURE.StorageSpecifier = 'extern';
            Var_FR_BRK_PRESSURE.CodeType = Type_1_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_FR_BRK_PRESSURE, 1);

              


    
% Variable: Var_RR_BRAKE_PRESSURE
Var_RR_BRAKE_PRESSURE = RTW.Variable(Type_1_R0_V0_C0, 'RR_BRAKE_PRESSURE');
    Var_RR_BRAKE_PRESSURE.Owner           = 'VCU_TDN';
    Var_RR_BRAKE_PRESSURE.DeclarationFile = 'VCU_TDN.h';
    Var_RR_BRAKE_PRESSURE.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_RR_BRAKE_PRESSURE.StorageSpecifier = 'extern';
            Var_RR_BRAKE_PRESSURE.CodeType = Type_1_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_RR_BRAKE_PRESSURE, 2);

              


    
% Variable: Var_APPS_1
Var_APPS_1 = RTW.Variable(Type_5_R0_V0_C0, 'APPS_1');
    Var_APPS_1.Owner           = 'VCU_TDN';
    Var_APPS_1.DeclarationFile = 'VCU_TDN.h';
    Var_APPS_1.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_APPS_1.StorageSpecifier = 'extern';
            Var_APPS_1.CodeType = Type_5_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_APPS_1, 3);

              


    
% Variable: Var_APPS_2
Var_APPS_2 = RTW.Variable(Type_5_R0_V0_C0, 'APPS_2');
    Var_APPS_2.Owner           = 'VCU_TDN';
    Var_APPS_2.DeclarationFile = 'VCU_TDN.h';
    Var_APPS_2.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_APPS_2.StorageSpecifier = 'extern';
            Var_APPS_2.CodeType = Type_5_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_APPS_2, 4);

              


    
% Variable: Var_N_lim
Var_N_lim = RTW.Variable(Type_5_R0_V0_C0, 'N_lim');
    Var_N_lim.Owner           = 'VCU_TDN';
    Var_N_lim.DeclarationFile = 'VCU_TDN.h';
    Var_N_lim.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_N_lim.StorageSpecifier = 'extern';
            Var_N_lim.CodeType = Type_5_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_N_lim, 5);

              


    
% Variable: Var_N_100
Var_N_100 = RTW.Variable(Type_5_R0_V0_C0, 'N_100');
    Var_N_100.Owner           = 'VCU_TDN';
    Var_N_100.DeclarationFile = 'VCU_TDN.h';
    Var_N_100.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_N_100.StorageSpecifier = 'extern';
            Var_N_100.CodeType = Type_5_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_N_100, 6);

              


    
% Variable: Var_Vdc_bus_V
Var_Vdc_bus_V = RTW.Variable(Type_4_R0_V0_C0, 'Vdc_bus_V');
    Var_Vdc_bus_V.Owner           = 'VCU_TDN';
    Var_Vdc_bus_V.DeclarationFile = 'VCU_TDN.h';
    Var_Vdc_bus_V.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_Vdc_bus_V.StorageSpecifier = 'extern';
            Var_Vdc_bus_V.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_Vdc_bus_V, 7);

              


    
% Variable: Var_I_act_filt_A
Var_I_act_filt_A = RTW.Variable(Type_4_R0_V0_C0, 'I_act_filt_A');
    Var_I_act_filt_A.Owner           = 'VCU_TDN';
    Var_I_act_filt_A.DeclarationFile = 'VCU_TDN.h';
    Var_I_act_filt_A.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_I_act_filt_A.StorageSpecifier = 'extern';
            Var_I_act_filt_A.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_I_act_filt_A, 8);

              


    
% Variable: Var_N_act_filt_RPM
Var_N_act_filt_RPM = RTW.Variable(Type_4_R0_V0_C0, 'N_act_filt_RPM');
    Var_N_act_filt_RPM.Owner           = 'VCU_TDN';
    Var_N_act_filt_RPM.DeclarationFile = 'VCU_TDN.h';
    Var_N_act_filt_RPM.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_N_act_filt_RPM.StorageSpecifier = 'extern';
            Var_N_act_filt_RPM.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_N_act_filt_RPM, 9);

              


    
% Variable: Var_Speed
Var_Speed = RTW.Variable(Type_4_R0_V0_C0, 'Speed');
    Var_Speed.Owner           = 'VCU_TDN';
    Var_Speed.DeclarationFile = 'VCU_TDN.h';
    Var_Speed.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_Speed.StorageSpecifier = 'extern';
            Var_Speed.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_Speed, 10);

              


    
% Variable: Var_T_air_deg
Var_T_air_deg = RTW.Variable(Type_4_R0_V0_C0, 'T_air_deg');
    Var_T_air_deg.Owner           = 'VCU_TDN';
    Var_T_air_deg.DeclarationFile = 'VCU_TDN.h';
    Var_T_air_deg.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_T_air_deg.StorageSpecifier = 'extern';
            Var_T_air_deg.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_T_air_deg, 11);

              


    
% Variable: Var_T_motor_deg
Var_T_motor_deg = RTW.Variable(Type_4_R0_V0_C0, 'T_motor_deg');
    Var_T_motor_deg.Owner           = 'VCU_TDN';
    Var_T_motor_deg.DeclarationFile = 'VCU_TDN.h';
    Var_T_motor_deg.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_T_motor_deg.StorageSpecifier = 'extern';
            Var_T_motor_deg.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_T_motor_deg, 12);

              


    
% Variable: Var_T_IGBT_deg
Var_T_IGBT_deg = RTW.Variable(Type_4_R0_V0_C0, 'T_IGBT_deg');
    Var_T_IGBT_deg.Owner           = 'VCU_TDN';
    Var_T_IGBT_deg.DeclarationFile = 'VCU_TDN.h';
    Var_T_IGBT_deg.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_T_IGBT_deg.StorageSpecifier = 'extern';
            Var_T_IGBT_deg.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_T_IGBT_deg, 13);

              


    
% Variable: Var_CURRENT_CH_1
Var_CURRENT_CH_1 = RTW.Variable(Type_4_R0_V0_C0, 'CURRENT_CH_1');
    Var_CURRENT_CH_1.Owner           = 'VCU_TDN';
    Var_CURRENT_CH_1.DeclarationFile = 'VCU_TDN.h';
    Var_CURRENT_CH_1.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_CURRENT_CH_1.StorageSpecifier = 'extern';
            Var_CURRENT_CH_1.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_CURRENT_CH_1, 14);

              


    
% Variable: Var_CURRENT_CH_2
Var_CURRENT_CH_2 = RTW.Variable(Type_4_R0_V0_C0, 'CURRENT_CH_2');
    Var_CURRENT_CH_2.Owner           = 'VCU_TDN';
    Var_CURRENT_CH_2.DeclarationFile = 'VCU_TDN.h';
    Var_CURRENT_CH_2.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_CURRENT_CH_2.StorageSpecifier = 'extern';
            Var_CURRENT_CH_2.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_CURRENT_CH_2, 15);

              


    
% Variable: Var_T_air
Var_T_air = RTW.Variable(Type_4_R0_V0_C0, 'T_air');
    Var_T_air.Owner           = 'VCU_TDN';
    Var_T_air.DeclarationFile = 'VCU_TDN.h';
    Var_T_air.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_T_air.StorageSpecifier = 'extern';
            Var_T_air.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_T_air, 16);

              


    
% Variable: Var_T_motor
Var_T_motor = RTW.Variable(Type_4_R0_V0_C0, 'T_motor');
    Var_T_motor.Owner           = 'VCU_TDN';
    Var_T_motor.DeclarationFile = 'VCU_TDN.h';
    Var_T_motor.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_T_motor.StorageSpecifier = 'extern';
            Var_T_motor.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_T_motor, 17);

              


    
% Variable: Var_T_IGBT
Var_T_IGBT = RTW.Variable(Type_4_R0_V0_C0, 'T_IGBT');
    Var_T_IGBT.Owner           = 'VCU_TDN';
    Var_T_IGBT.DeclarationFile = 'VCU_TDN.h';
    Var_T_IGBT.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_T_IGBT.StorageSpecifier = 'extern';
            Var_T_IGBT.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_T_IGBT, 18);

              


    
% Variable: Var_I_cmd
Var_I_cmd = RTW.Variable(Type_4_R0_V0_C0, 'I_cmd');
    Var_I_cmd.Owner           = 'VCU_TDN';
    Var_I_cmd.DeclarationFile = 'VCU_TDN.h';
    Var_I_cmd.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_I_cmd.StorageSpecifier = 'extern';
            Var_I_cmd.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_I_cmd, 19);

              


    
% Variable: Var_I_act_filt
Var_I_act_filt = RTW.Variable(Type_4_R0_V0_C0, 'I_act_filt');
    Var_I_act_filt.Owner           = 'VCU_TDN';
    Var_I_act_filt.DeclarationFile = 'VCU_TDN.h';
    Var_I_act_filt.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_I_act_filt.StorageSpecifier = 'extern';
            Var_I_act_filt.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_I_act_filt, 20);

              


    
% Variable: Var_Vdc_bus
Var_Vdc_bus = RTW.Variable(Type_4_R0_V0_C0, 'Vdc_bus');
    Var_Vdc_bus.Owner           = 'VCU_TDN';
    Var_Vdc_bus.DeclarationFile = 'VCU_TDN.h';
    Var_Vdc_bus.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_Vdc_bus.StorageSpecifier = 'extern';
            Var_Vdc_bus.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_Vdc_bus, 21);

              


    
% Variable: Var_I_200
Var_I_200 = RTW.Variable(Type_4_R0_V0_C0, 'I_200');
    Var_I_200.Owner           = 'VCU_TDN';
    Var_I_200.DeclarationFile = 'VCU_TDN.h';
    Var_I_200.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_I_200.StorageSpecifier = 'extern';
            Var_I_200.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_I_200, 22);

              


    
% Variable: Var_I_device
Var_I_device = RTW.Variable(Type_4_R0_V0_C0, 'I_device');
    Var_I_device.Owner           = 'VCU_TDN';
    Var_I_device.DeclarationFile = 'VCU_TDN.h';
    Var_I_device.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_I_device.StorageSpecifier = 'extern';
            Var_I_device.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_I_device, 23);

              


    
% Variable: Var_I_max_pk
Var_I_max_pk = RTW.Variable(Type_4_R0_V0_C0, 'I_max_pk');
    Var_I_max_pk.Owner           = 'VCU_TDN';
    Var_I_max_pk.DeclarationFile = 'VCU_TDN.h';
    Var_I_max_pk.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_I_max_pk.StorageSpecifier = 'extern';
            Var_I_max_pk.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_I_max_pk, 24);

              


    
% Variable: Var_I_nom_eff
Var_I_nom_eff = RTW.Variable(Type_4_R0_V0_C0, 'I_nom_eff');
    Var_I_nom_eff.Owner           = 'VCU_TDN';
    Var_I_nom_eff.DeclarationFile = 'VCU_TDN.h';
    Var_I_nom_eff.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_I_nom_eff.StorageSpecifier = 'extern';
            Var_I_nom_eff.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_I_nom_eff, 25);

              


    
% Variable: Var_I_max_eff
Var_I_max_eff = RTW.Variable(Type_4_R0_V0_C0, 'I_max_eff');
    Var_I_max_eff.Owner           = 'VCU_TDN';
    Var_I_max_eff.DeclarationFile = 'VCU_TDN.h';
    Var_I_max_eff.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_I_max_eff.StorageSpecifier = 'extern';
            Var_I_max_eff.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_I_max_eff, 26);

              


    
% Variable: Var_SpeedRPMmax
Var_SpeedRPMmax = RTW.Variable(Type_4_R0_V0_C0, 'SpeedRPMmax');
    Var_SpeedRPMmax.Owner           = 'VCU_TDN';
    Var_SpeedRPMmax.DeclarationFile = 'VCU_TDN.h';
    Var_SpeedRPMmax.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_SpeedRPMmax.StorageSpecifier = 'extern';
            Var_SpeedRPMmax.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_SpeedRPMmax, 27);

              


    
% Variable: Var_N_act_filt
Var_N_act_filt = RTW.Variable(Type_4_R0_V0_C0, 'N_act_filt');
    Var_N_act_filt.Owner           = 'VCU_TDN';
    Var_N_act_filt.DeclarationFile = 'VCU_TDN.h';
    Var_N_act_filt.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_N_act_filt.StorageSpecifier = 'extern';
            Var_N_act_filt.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_N_act_filt, 28);

              


    
% Variable: Var_N_R_Dec
Var_N_R_Dec = RTW.Variable(Type_4_R0_V0_C0, 'N_R_Dec');
    Var_N_R_Dec.Owner           = 'VCU_TDN';
    Var_N_R_Dec.DeclarationFile = 'VCU_TDN.h';
    Var_N_R_Dec.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_N_R_Dec.StorageSpecifier = 'extern';
            Var_N_R_Dec.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_N_R_Dec, 29);

              


    
% Variable: Var_M_R_Dec
Var_M_R_Dec = RTW.Variable(Type_4_R0_V0_C0, 'M_R_Dec');
    Var_M_R_Dec.Owner           = 'VCU_TDN';
    Var_M_R_Dec.DeclarationFile = 'VCU_TDN.h';
    Var_M_R_Dec.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_M_R_Dec.StorageSpecifier = 'extern';
            Var_M_R_Dec.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_M_R_Dec, 30);

              


    
% Variable: Var_N_R_Acc
Var_N_R_Acc = RTW.Variable(Type_4_R0_V0_C0, 'N_R_Acc');
    Var_N_R_Acc.Owner           = 'VCU_TDN';
    Var_N_R_Acc.DeclarationFile = 'VCU_TDN.h';
    Var_N_R_Acc.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_N_R_Acc.StorageSpecifier = 'extern';
            Var_N_R_Acc.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_N_R_Acc, 31);

              


    
% Variable: Var_M_R_Acc
Var_M_R_Acc = RTW.Variable(Type_4_R0_V0_C0, 'M_R_Acc');
    Var_M_R_Acc.Owner           = 'VCU_TDN';
    Var_M_R_Acc.DeclarationFile = 'VCU_TDN.h';
    Var_M_R_Acc.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_M_R_Acc.StorageSpecifier = 'extern';
            Var_M_R_Acc.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_M_R_Acc, 32);

              


    
% Variable: Var_N_lim_neg
Var_N_lim_neg = RTW.Variable(Type_4_R0_V0_C0, 'N_lim_neg');
    Var_N_lim_neg.Owner           = 'VCU_TDN';
    Var_N_lim_neg.DeclarationFile = 'VCU_TDN.h';
    Var_N_lim_neg.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_N_lim_neg.StorageSpecifier = 'extern';
            Var_N_lim_neg.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_N_lim_neg, 33);

              


    
% Variable: Var_N_lim_pos
Var_N_lim_pos = RTW.Variable(Type_4_R0_V0_C0, 'N_lim_pos');
    Var_N_lim_pos.Owner           = 'VCU_TDN';
    Var_N_lim_pos.DeclarationFile = 'VCU_TDN.h';
    Var_N_lim_pos.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_N_lim_pos.StorageSpecifier = 'extern';
            Var_N_lim_pos.CodeType = Type_4_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_N_lim_pos, 34);

              


    
% Variable: Var_PwrM_flgKeyOnDelay
Var_PwrM_flgKeyOnDelay = RTW.Variable(Type_8_R0_V0_C0, 'PwrM_flgKeyOnDelay');
    Var_PwrM_flgKeyOnDelay.Owner           = 'VCU_TDN';
    Var_PwrM_flgKeyOnDelay.DeclarationFile = 'VCU_TDN.h';
    Var_PwrM_flgKeyOnDelay.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_PwrM_flgKeyOnDelay.StorageSpecifier = 'extern';
            Var_PwrM_flgKeyOnDelay.CodeType = Type_8_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_PwrM_flgKeyOnDelay, 35);

              


    
% Variable: Var_PwrM_flgKeyOnRaw
Var_PwrM_flgKeyOnRaw = RTW.Variable(Type_8_R0_V0_C0, 'PwrM_flgKeyOnRaw');
    Var_PwrM_flgKeyOnRaw.Owner           = 'VCU_TDN';
    Var_PwrM_flgKeyOnRaw.DeclarationFile = 'VCU_TDN.h';
    Var_PwrM_flgKeyOnRaw.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_PwrM_flgKeyOnRaw.StorageSpecifier = 'extern';
            Var_PwrM_flgKeyOnRaw.CodeType = Type_8_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_PwrM_flgKeyOnRaw, 36);

              


    
% Variable: Var_BRK_PDL_FAULT
Var_BRK_PDL_FAULT = RTW.Variable(Type_8_R0_V0_C0, 'BRK_PDL_FAULT');
    Var_BRK_PDL_FAULT.Owner           = 'VCU_TDN';
    Var_BRK_PDL_FAULT.DeclarationFile = 'VCU_TDN.h';
    Var_BRK_PDL_FAULT.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_BRK_PDL_FAULT.StorageSpecifier = 'extern';
            Var_BRK_PDL_FAULT.CodeType = Type_8_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_BRK_PDL_FAULT, 37);

              


    
% Variable: Var_BRK_CONTACTOR
Var_BRK_CONTACTOR = RTW.Variable(Type_8_R0_V0_C0, 'BRK_CONTACTOR');
    Var_BRK_CONTACTOR.Owner           = 'VCU_TDN';
    Var_BRK_CONTACTOR.DeclarationFile = 'VCU_TDN.h';
    Var_BRK_CONTACTOR.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_BRK_CONTACTOR.StorageSpecifier = 'extern';
            Var_BRK_CONTACTOR.CodeType = Type_8_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_BRK_CONTACTOR, 38);

              


    
% Variable: Var_RDY_DRV_BUTTON
Var_RDY_DRV_BUTTON = RTW.Variable(Type_8_R0_V0_C0, 'RDY_DRV_BUTTON');
    Var_RDY_DRV_BUTTON.Owner           = 'VCU_TDN';
    Var_RDY_DRV_BUTTON.DeclarationFile = 'VCU_TDN.h';
    Var_RDY_DRV_BUTTON.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_RDY_DRV_BUTTON.StorageSpecifier = 'extern';
            Var_RDY_DRV_BUTTON.CodeType = Type_8_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_RDY_DRV_BUTTON, 39);

              


    
% Variable: Var_RDY_DRV
Var_RDY_DRV = RTW.Variable(Type_8_R0_V0_C0, 'RDY_DRV');
    Var_RDY_DRV.Owner           = 'VCU_TDN';
    Var_RDY_DRV.DeclarationFile = 'VCU_TDN.h';
    Var_RDY_DRV.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_RDY_DRV.StorageSpecifier = 'extern';
            Var_RDY_DRV.CodeType = Type_8_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_RDY_DRV, 40);

              


    
% Variable: Var_BATT_FAN_ON
Var_BATT_FAN_ON = RTW.Variable(Type_8_R0_V0_C0, 'BATT_FAN_ON');
    Var_BATT_FAN_ON.Owner           = 'VCU_TDN';
    Var_BATT_FAN_ON.DeclarationFile = 'VCU_TDN.h';
    Var_BATT_FAN_ON.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_BATT_FAN_ON.StorageSpecifier = 'extern';
            Var_BATT_FAN_ON.CodeType = Type_8_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_BATT_FAN_ON, 41);

              


    
% Variable: Var_FAN_ON
Var_FAN_ON = RTW.Variable(Type_8_R0_V0_C0, 'FAN_ON');
    Var_FAN_ON.Owner           = 'VCU_TDN';
    Var_FAN_ON.DeclarationFile = 'VCU_TDN.h';
    Var_FAN_ON.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_FAN_ON.StorageSpecifier = 'extern';
            Var_FAN_ON.CodeType = Type_8_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_FAN_ON, 42);

              


    
% Variable: Var_PUMP_ON
Var_PUMP_ON = RTW.Variable(Type_8_R0_V0_C0, 'PUMP_ON');
    Var_PUMP_ON.Owner           = 'VCU_TDN';
    Var_PUMP_ON.DeclarationFile = 'VCU_TDN.h';
    Var_PUMP_ON.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_PUMP_ON.StorageSpecifier = 'extern';
            Var_PUMP_ON.CodeType = Type_8_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_PUMP_ON, 43);

              


    
% Variable: Var_APPS_FAULT
Var_APPS_FAULT = RTW.Variable(Type_8_R0_V0_C0, 'APPS_FAULT');
    Var_APPS_FAULT.Owner           = 'VCU_TDN';
    Var_APPS_FAULT.DeclarationFile = 'VCU_TDN.h';
    Var_APPS_FAULT.DefinitionFile  = 'VCU_TDN.c';
    
                 
             Var_APPS_FAULT.StorageSpecifier = 'extern';
            Var_APPS_FAULT.CodeType = Type_8_R0_V0_C0;
            wr.writeExternalBlockOutput(Var_APPS_FAULT, 44);


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        


    
    
    
        






    tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = coder.types.Argument.empty;
tmpActualReturn = RTW.DataInterface.empty;
  

  func_Initialize_Prototype = coder.types.Prototype;
  func_Initialize_Prototype.Arguments  = tmpArgs;
  func_Initialize_Prototype.Return     = tmpRet;
    func_Initialize_Prototype.HeaderFile = ['VCU_TDN', '.h'];
  func_Initialize_Prototype.SourceFile = ['VCU_TDN', '.c'];

  func_Initialize_Interface = RTW.FunctionInterface;
  func_Initialize_Interface.Prototype    = func_Initialize_Prototype;
  func_Initialize_Interface.ActualArgs   = tmpActualArgs;
  func_Initialize_Interface.ActualReturn = tmpActualReturn;

      func_Initialize_Prototype.Name = 'VCU_TDN_initialize';
  time_constant = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, -1));
      func_Initialize_Interface.Timing = time_constant;
      codeInfo.InitializeFunctions =  [codeInfo.InitializeFunctions, func_Initialize_Interface'];


            tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = coder.types.Argument.empty;
tmpActualReturn = RTW.DataInterface.empty;
        


% Unsized integer type    
Type_int_R0_V0 = coder.types.Int(32,1);
    Type_int_R0_V0.Identifier = 'int_T';
    Type_int_R0_V0.Name       = 'int';
    Type_int_R0_V0.ReadOnly   = 0;
    Type_int_R0_V0.Volatile   = 0;
    
  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
    TIDArg = coder.types.Argument;
    TIDArg.Type = Type_int_R0_V0;
    TIDArg.Name = 'tid';
    
% Literal: Lit_0
Lit_0 = RTW.Literal(Type_int_R0_V0, 0);
    
    
% Data Interface: Const_TID0
empty_timing = RTW.TimingInterface.empty;
Const_TID0 = RTW.DataInterface('', 'TID0', Lit_0, empty_timing);
    
    
    tmpArgs = [tmpArgs, TIDArg];
    tmpActualArgs = [tmpActualArgs, Const_TID0];    
  

  

  func_OutputUpdate0_Prototype = coder.types.Prototype;
  func_OutputUpdate0_Prototype.Arguments  = tmpArgs;
  func_OutputUpdate0_Prototype.Return     = tmpRet;
    func_OutputUpdate0_Prototype.HeaderFile = ['VCU_TDN', '.h'];
  func_OutputUpdate0_Prototype.SourceFile = ['VCU_TDN', '.c'];

  func_OutputUpdate0_Interface = RTW.FunctionInterface;
  func_OutputUpdate0_Interface.Prototype    = func_OutputUpdate0_Prototype;
  func_OutputUpdate0_Interface.ActualArgs   = tmpActualArgs;
  func_OutputUpdate0_Interface.ActualReturn = tmpActualReturn;

        func_OutputUpdate0_Prototype.Name = 'VCU_TDN_step';
  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
      func_OutputUpdate0_Interface.Timing = time_0;
      codeInfo.OutputFunctions =  [codeInfo.OutputFunctions, func_OutputUpdate0_Interface'];


            tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = coder.types.Argument.empty;
tmpActualReturn = RTW.DataInterface.empty;
        

  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
    TIDArg = coder.types.Argument;
    TIDArg.Type = Type_int_R0_V0;
    TIDArg.Name = 'tid';
    
% Literal: Lit_1
Lit_1 = RTW.Literal(Type_int_R0_V0, 1);
    
    
% Data Interface: Const_TID1
empty_timing = RTW.TimingInterface.empty;
Const_TID1 = RTW.DataInterface('', 'TID1', Lit_1, empty_timing);
    
    
    tmpArgs = [tmpArgs, TIDArg];
    tmpActualArgs = [tmpActualArgs, Const_TID1];    
  

  

  func_OutputUpdate1_Prototype = coder.types.Prototype;
  func_OutputUpdate1_Prototype.Arguments  = tmpArgs;
  func_OutputUpdate1_Prototype.Return     = tmpRet;
    func_OutputUpdate1_Prototype.HeaderFile = ['VCU_TDN', '.h'];
  func_OutputUpdate1_Prototype.SourceFile = ['VCU_TDN', '.c'];

  func_OutputUpdate1_Interface = RTW.FunctionInterface;
  func_OutputUpdate1_Interface.Prototype    = func_OutputUpdate1_Prototype;
  func_OutputUpdate1_Interface.ActualArgs   = tmpActualArgs;
  func_OutputUpdate1_Interface.ActualReturn = tmpActualReturn;

        func_OutputUpdate1_Prototype.Name = 'VCU_TDN_step';
  time_1 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 1));
      func_OutputUpdate1_Interface.Timing = time_1;
      codeInfo.OutputFunctions =  [codeInfo.OutputFunctions, func_OutputUpdate1_Interface'];


            tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = coder.types.Argument.empty;
tmpActualReturn = RTW.DataInterface.empty;
        

  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
    TIDArg = coder.types.Argument;
    TIDArg.Type = Type_int_R0_V0;
    TIDArg.Name = 'tid';
    
% Literal: Lit_2
Lit_2 = RTW.Literal(Type_int_R0_V0, 2);
    
    
% Data Interface: Const_TID2
empty_timing = RTW.TimingInterface.empty;
Const_TID2 = RTW.DataInterface('', 'TID2', Lit_2, empty_timing);
    
    
    tmpArgs = [tmpArgs, TIDArg];
    tmpActualArgs = [tmpActualArgs, Const_TID2];    
  

  

  func_OutputUpdate2_Prototype = coder.types.Prototype;
  func_OutputUpdate2_Prototype.Arguments  = tmpArgs;
  func_OutputUpdate2_Prototype.Return     = tmpRet;
    func_OutputUpdate2_Prototype.HeaderFile = ['VCU_TDN', '.h'];
  func_OutputUpdate2_Prototype.SourceFile = ['VCU_TDN', '.c'];

  func_OutputUpdate2_Interface = RTW.FunctionInterface;
  func_OutputUpdate2_Interface.Prototype    = func_OutputUpdate2_Prototype;
  func_OutputUpdate2_Interface.ActualArgs   = tmpActualArgs;
  func_OutputUpdate2_Interface.ActualReturn = tmpActualReturn;

        func_OutputUpdate2_Prototype.Name = 'VCU_TDN_step';
  time_2 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 2));
      func_OutputUpdate2_Interface.Timing = time_2;
      codeInfo.OutputFunctions =  [codeInfo.OutputFunctions, func_OutputUpdate2_Interface'];


            tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = coder.types.Argument.empty;
tmpActualReturn = RTW.DataInterface.empty;
        

  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
    TIDArg = coder.types.Argument;
    TIDArg.Type = Type_int_R0_V0;
    TIDArg.Name = 'tid';
    
% Literal: Lit_3
Lit_3 = RTW.Literal(Type_int_R0_V0, 3);
    
    
% Data Interface: Const_TID3
empty_timing = RTW.TimingInterface.empty;
Const_TID3 = RTW.DataInterface('', 'TID3', Lit_3, empty_timing);
    
    
    tmpArgs = [tmpArgs, TIDArg];
    tmpActualArgs = [tmpActualArgs, Const_TID3];    
  

  

  func_OutputUpdate3_Prototype = coder.types.Prototype;
  func_OutputUpdate3_Prototype.Arguments  = tmpArgs;
  func_OutputUpdate3_Prototype.Return     = tmpRet;
    func_OutputUpdate3_Prototype.HeaderFile = ['VCU_TDN', '.h'];
  func_OutputUpdate3_Prototype.SourceFile = ['VCU_TDN', '.c'];

  func_OutputUpdate3_Interface = RTW.FunctionInterface;
  func_OutputUpdate3_Interface.Prototype    = func_OutputUpdate3_Prototype;
  func_OutputUpdate3_Interface.ActualArgs   = tmpActualArgs;
  func_OutputUpdate3_Interface.ActualReturn = tmpActualReturn;

        func_OutputUpdate3_Prototype.Name = 'VCU_TDN_step';
  time_3 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 3));
      func_OutputUpdate3_Interface.Timing = time_3;
      codeInfo.OutputFunctions =  [codeInfo.OutputFunctions, func_OutputUpdate3_Interface'];


            tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = coder.types.Argument.empty;
tmpActualReturn = RTW.DataInterface.empty;
        

  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
    TIDArg = coder.types.Argument;
    TIDArg.Type = Type_int_R0_V0;
    TIDArg.Name = 'tid';
    
% Literal: Lit_4
Lit_4 = RTW.Literal(Type_int_R0_V0, 4);
    
    
% Data Interface: Const_TID4
empty_timing = RTW.TimingInterface.empty;
Const_TID4 = RTW.DataInterface('', 'TID4', Lit_4, empty_timing);
    
    
    tmpArgs = [tmpArgs, TIDArg];
    tmpActualArgs = [tmpActualArgs, Const_TID4];    
  

  

  func_OutputUpdate4_Prototype = coder.types.Prototype;
  func_OutputUpdate4_Prototype.Arguments  = tmpArgs;
  func_OutputUpdate4_Prototype.Return     = tmpRet;
    func_OutputUpdate4_Prototype.HeaderFile = ['VCU_TDN', '.h'];
  func_OutputUpdate4_Prototype.SourceFile = ['VCU_TDN', '.c'];

  func_OutputUpdate4_Interface = RTW.FunctionInterface;
  func_OutputUpdate4_Interface.Prototype    = func_OutputUpdate4_Prototype;
  func_OutputUpdate4_Interface.ActualArgs   = tmpActualArgs;
  func_OutputUpdate4_Interface.ActualReturn = tmpActualReturn;

        func_OutputUpdate4_Prototype.Name = 'VCU_TDN_step';
  time_4 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 4));
      func_OutputUpdate4_Interface.Timing = time_4;
      codeInfo.OutputFunctions =  [codeInfo.OutputFunctions, func_OutputUpdate4_Interface'];


            tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = coder.types.Argument.empty;
tmpActualReturn = RTW.DataInterface.empty;
        

  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
    TIDArg = coder.types.Argument;
    TIDArg.Type = Type_int_R0_V0;
    TIDArg.Name = 'tid';
    
% Literal: Lit_5
Lit_5 = RTW.Literal(Type_int_R0_V0, 5);
    
    
% Data Interface: Const_TID5
empty_timing = RTW.TimingInterface.empty;
Const_TID5 = RTW.DataInterface('', 'TID5', Lit_5, empty_timing);
    
    
    tmpArgs = [tmpArgs, TIDArg];
    tmpActualArgs = [tmpActualArgs, Const_TID5];    
  

  

  func_OutputUpdate5_Prototype = coder.types.Prototype;
  func_OutputUpdate5_Prototype.Arguments  = tmpArgs;
  func_OutputUpdate5_Prototype.Return     = tmpRet;
    func_OutputUpdate5_Prototype.HeaderFile = ['VCU_TDN', '.h'];
  func_OutputUpdate5_Prototype.SourceFile = ['VCU_TDN', '.c'];

  func_OutputUpdate5_Interface = RTW.FunctionInterface;
  func_OutputUpdate5_Interface.Prototype    = func_OutputUpdate5_Prototype;
  func_OutputUpdate5_Interface.ActualArgs   = tmpActualArgs;
  func_OutputUpdate5_Interface.ActualReturn = tmpActualReturn;

        func_OutputUpdate5_Prototype.Name = 'VCU_TDN_step';
  time_5 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 5));
      func_OutputUpdate5_Interface.Timing = time_5;
      codeInfo.OutputFunctions =  [codeInfo.OutputFunctions, func_OutputUpdate5_Interface'];


            tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = coder.types.Argument.empty;
tmpActualReturn = RTW.DataInterface.empty;
        

  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
    TIDArg = coder.types.Argument;
    TIDArg.Type = Type_int_R0_V0;
    TIDArg.Name = 'tid';
    
% Literal: Lit_6
Lit_6 = RTW.Literal(Type_int_R0_V0, 6);
    
    
% Data Interface: Const_TID6
empty_timing = RTW.TimingInterface.empty;
Const_TID6 = RTW.DataInterface('', 'TID6', Lit_6, empty_timing);
    
    
    tmpArgs = [tmpArgs, TIDArg];
    tmpActualArgs = [tmpActualArgs, Const_TID6];    
  

  

  func_OutputUpdate6_Prototype = coder.types.Prototype;
  func_OutputUpdate6_Prototype.Arguments  = tmpArgs;
  func_OutputUpdate6_Prototype.Return     = tmpRet;
    func_OutputUpdate6_Prototype.HeaderFile = ['VCU_TDN', '.h'];
  func_OutputUpdate6_Prototype.SourceFile = ['VCU_TDN', '.c'];

  func_OutputUpdate6_Interface = RTW.FunctionInterface;
  func_OutputUpdate6_Interface.Prototype    = func_OutputUpdate6_Prototype;
  func_OutputUpdate6_Interface.ActualArgs   = tmpActualArgs;
  func_OutputUpdate6_Interface.ActualReturn = tmpActualReturn;

        func_OutputUpdate6_Prototype.Name = 'VCU_TDN_step';
  time_6 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 6));
      func_OutputUpdate6_Interface.Timing = time_6;
      codeInfo.OutputFunctions =  [codeInfo.OutputFunctions, func_OutputUpdate6_Interface'];


            tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = coder.types.Argument.empty;
tmpActualReturn = RTW.DataInterface.empty;
        

  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
    TIDArg = coder.types.Argument;
    TIDArg.Type = Type_int_R0_V0;
    TIDArg.Name = 'tid';
    
% Literal: Lit_7
Lit_7 = RTW.Literal(Type_int_R0_V0, 7);
    
    
% Data Interface: Const_TID7
empty_timing = RTW.TimingInterface.empty;
Const_TID7 = RTW.DataInterface('', 'TID7', Lit_7, empty_timing);
    
    
    tmpArgs = [tmpArgs, TIDArg];
    tmpActualArgs = [tmpActualArgs, Const_TID7];    
  

  

  func_OutputUpdate7_Prototype = coder.types.Prototype;
  func_OutputUpdate7_Prototype.Arguments  = tmpArgs;
  func_OutputUpdate7_Prototype.Return     = tmpRet;
    func_OutputUpdate7_Prototype.HeaderFile = ['VCU_TDN', '.h'];
  func_OutputUpdate7_Prototype.SourceFile = ['VCU_TDN', '.c'];

  func_OutputUpdate7_Interface = RTW.FunctionInterface;
  func_OutputUpdate7_Interface.Prototype    = func_OutputUpdate7_Prototype;
  func_OutputUpdate7_Interface.ActualArgs   = tmpActualArgs;
  func_OutputUpdate7_Interface.ActualReturn = tmpActualReturn;

        func_OutputUpdate7_Prototype.Name = 'VCU_TDN_step';
  time_7 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 7));
      func_OutputUpdate7_Interface.Timing = time_7;
      codeInfo.OutputFunctions =  [codeInfo.OutputFunctions, func_OutputUpdate7_Interface'];


            tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = coder.types.Argument.empty;
tmpActualReturn = RTW.DataInterface.empty;
        

  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
    TIDArg = coder.types.Argument;
    TIDArg.Type = Type_int_R0_V0;
    TIDArg.Name = 'tid';
    
% Literal: Lit_8
Lit_8 = RTW.Literal(Type_int_R0_V0, 8);
    
    
% Data Interface: Const_TID8
empty_timing = RTW.TimingInterface.empty;
Const_TID8 = RTW.DataInterface('', 'TID8', Lit_8, empty_timing);
    
    
    tmpArgs = [tmpArgs, TIDArg];
    tmpActualArgs = [tmpActualArgs, Const_TID8];    
  

  

  func_OutputUpdate8_Prototype = coder.types.Prototype;
  func_OutputUpdate8_Prototype.Arguments  = tmpArgs;
  func_OutputUpdate8_Prototype.Return     = tmpRet;
    func_OutputUpdate8_Prototype.HeaderFile = ['VCU_TDN', '.h'];
  func_OutputUpdate8_Prototype.SourceFile = ['VCU_TDN', '.c'];

  func_OutputUpdate8_Interface = RTW.FunctionInterface;
  func_OutputUpdate8_Interface.Prototype    = func_OutputUpdate8_Prototype;
  func_OutputUpdate8_Interface.ActualArgs   = tmpActualArgs;
  func_OutputUpdate8_Interface.ActualReturn = tmpActualReturn;

        func_OutputUpdate8_Prototype.Name = 'VCU_TDN_step';
  time_8 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 8));
      func_OutputUpdate8_Interface.Timing = time_8;
      codeInfo.OutputFunctions =  [codeInfo.OutputFunctions, func_OutputUpdate8_Interface'];

          
         
    
      

  







if ~isempty(skippedParameters)
fr.removeSkippedParameters(codeInfo.Parameters(skippedParameters));
codeInfo.Parameters(skippedParameters) = [];
end


% Handling Right-Click Builds
ss = rtwprivate('getSourceSubsystemHandle',codeInfo.GraphicalPath);
% Check if Rt-Click build, then re-map SIDs
if ~isempty(ss) && rtwprivate('rtwattic','hasSIDMap')
   codeInfo = modifyCodeInfoForSubsystemBuild(ss, codeInfo, wr);
end


    

fr.writeFunctionInterfaces(codeInfo);
fr.writeServerCallPoints(codeInfo);



    wr.copyTimingInterfacesForLibraryCodegen();
wr.closeRepo();
  if exist('expInports', 'var')
    save codeInfo.mat codeInfo expInports;
  else
    save codeInfo.mat codeInfo;
  end
returnVal = 1;

% End Function: writeCodeInfoFcn

function data = uniquifyDataAccess(list)
  data = RTW.DataInterface.empty;
  for idx=1:numel(list)
      if ~isPresentDI(data, list(idx))
          data(end+1) = list(idx); %#ok<AGROW>
      end
  end
% End Function: uniquifyDataAccess
        
function isPresent = isPresentDI(list, di)
  isPresent = false;
  for idx = 1:numel(list)
    if isequal(list(idx), di)
      isPresent = true;
      break
    end
  end

function idx = getIndexFromTimingInternalId(internalIdVec, internalId)
 idx = find(internalIdVec == internalId);
 if (isempty(idx) || (length(idx) > 1))
    ciMsg = 'Time object cannot be empty'; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: getIndexFromTimingInternalId

function checkDataGraphicalNames(ciName, rtwName)
  if (strcmp(ciName, rtwName) ~= 1)
    ciMsg = ['Name mismatch: ', ciName, ' and ', rtwName]; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: checkDataGraphicalNames

function iData = getInternalDataByName(iDataVec, iDataName)
 iData = RTW.DataInterface.empty;
 for idxData = 1:numel(iDataVec)
    if strcmp(iDataName, iDataVec(idxData).GraphicalName)
       iData(end+1) = iDataVec(idxData);
       break
    end
 end
 if (isempty(iData) || (length(iData) > 1))
    ciMsg = 'Internal Data object cannot be empty'; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: getInternalDataByName

function iData = getInternalDataByVariableName(iDataVec, iDataVariableName)
 iData = RTW.DataInterface.empty;
 for idxData = 1:numel(iDataVec)
    if strcmp(iDataVariableName, iDataVec(idxData).Implementation.VariableName)
       iData = iDataVec(idxData);
       break
    end
 end
 if isempty(iData)
    ciMsg = 'Internal Data object cannot be empty'; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: getInternalDataByVariableName

function codeInfo = modifyCodeInfoForSubsystemBuild(ss, codeInfo, wr)
% Extract Subsystem Build Map from AtticData
    Subsystem_Build_Mapping = rtwprivate('rtwattic','getSIDMap');

% Parameters
    for i = 1:length(codeInfo.Parameters)
        sid = codeInfo.Parameters(i).SID;        

        sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
        codeInfo.Parameters(i).SID = sid;
        wr.updateSIDForSubsystemBuild("Parameter", i, sid, codeInfo.Parameters(i));
    end

% Data Stores
     for i = 1:length(codeInfo.DataStores)
         sid = codeInfo.DataStores(i).SID;         

         sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
         codeInfo.DataStores(i).SID = sid;
         wr.updateSIDForSubsystemBuild("DataStore", i, sid);

     end

% Inports
    for i = 1:length(codeInfo.Inports)
        sid = codeInfo.Inports(i).SID;

        sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
        codeInfo.Inports(i).SID = sid;
        wr.updateSIDForSubsystemBuild("Inport", i, sid);

    end

% Outports
    for i = 1:length(codeInfo.Outports)
        sid = codeInfo.Outports(i).SID;

        sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
        codeInfo.Outports(i).SID = sid;
        wr.updateSIDForSubsystemBuild("Outport", i, sid);

    end    

