/******************************************************************************
 *
 *  ASAP2 file:     VCU_TDN.a2l
 *
 * Academic License - for use in teaching, academic research, and meeting
 * course requirements at degree granting institutions only.  Not for
 * government, commercial, or other organizational use. 
 * 
 * Code generation for model "VCU_TDN".
 *
 * Model version              : 1.21
 * Simulink Coder version : 9.3 (R2020a) 18-Nov-2019
 * C source code generated on : Tue Mar  1 18:01:29 2022
 * 
 * Target selection: MPC5644A.tlc
 * Embedded hardware selection: Freescale->MPC55xx
 * Code generation objectives: Unspecified
 * Validation result: Not run
 *
 * (add additional file header information here)
 *
 ******************************************************************************/

ASAP2_VERSION  1 31   /* Version 1.31 */

/begin PROJECT ProjectName "Project Comment Goes Here"
  
  /begin HEADER "Header Comments go here"
    
  /end HEADER
  
  
  /begin MODULE ModuleName  "Module Comment Goes Here"
    
    /* EcoCoder V2.9.5 R2 Target:EV2274A verCalTool:0.0*/
    /* XCP-En:0 XCPCalTool:EcoCAL INCA CANape XCP-CAN:CAN_CTRL_C XCP-CAN-Baud:500kbps*/ 
    /* CCP-En:1 CCP-TYPE:Configurable CCPCalTool:EcoCAL INCA CCP-CAN:CAN_CTRL_B CCP-CAN-Baud:500kbps*/
    /*PGCANAEn:NoUse PGCANAStation:NoUse PGCANABaud:500kbps PGCANACRO:NoUse PGCANADTO:NoUse*/
    /*PGCANBEn:NoUse PGCANBStation:NoUse PGCANBBaud:500kbps PGCANBCRO:NoUse PGCANBDTO:NoUse*/
    /*PGCANCEn:NoUse PGCANCStation:NoUse PGCANCBaud:500kbps PGCANCCRO:NoUse PGCANCDTO:NoUse*/
    /*PGCANDEn:NoUse PGCANDStation:NoUse PGCANDBaud:NoUsekbps PGCANDCRO:NoUse PGCANDDTO:NoUse*/
    /begin A2ML
      /************************************************************************************/
      /*                                                                                  */
      /*   ASAP2 meta language for XCP protocol layer V1.0                                */
      /*                                                                                  */
      /*   2019-01-04                                                                     */
      /*                                                                                  */
      /*   Ecotrons hxl                                                                   */
      /*                                                                                  */
      /*   Datatypes:                                                                     */
      /*                                                                                  */
      /*   A2ML       ASAP2             Windows      description                          */
      /*   -------------------------------------------------------------------------------*/
      /*   uchar      UBYTE             BYTE         unsigned 8 Bit                       */
      /*   char       SBYTE             char         signed 8 Bit                         */
      /*   uint       UWORD             WORD         unsigned integer 16 Bit              */
      /*   int        SWORD             int          signed integer 16 Bit                */
      /*   ulong      ULONG             DWORD        unsigned integer 32 Bit              */
      /*   long       SLONG             LONG         signed integer 32 Bit                */
      /*   float      FLOAT32_IEEE                   float 32 Bit                         */
      /*                                                                                  */
      /************************************************************************************/
      /*ECO_XCP_Note_Start
       struct Protocol_Layer {
       uint;
       uint;
       uint;
       uint;
       uint;
       uint;
       uint;
       uint;
       uchar;
       uint;
       enum {
       "BYTE_ORDER_MSB_LAST" = 0,
       "BYTE_ORDER_MSB_FIRST" = 1
       }; 
       enum {
       "ADDRESS_GRANULARITY_BYTE" = 1,
       "ADDRESS_GRANULARITY_WORD" = 2,
       "ADDRESS_GRANULARITY_DWORD" = 4
       };
       taggedstruct {
       ("OPTIONAL_CMD" enum {
       "GET_COMM_MODE_INFO" = 251,
       "GET_ID" = 250,
       "SET_REQUEST" = 249,
       "GET_SEED" = 248,
       "UNLOCK" = 247,
       "SET_MTA" = 246,
       "UPLOAD" = 245,
       "SHORT_UPLOAD" = 244,
       "BUILD_CHECKSUM" = 243,
       "TRANSPORT_LAYER_CMD" = 242,
       "USER_CMD" = 241,
       "DOWNLOAD" = 240,
       "DOWNLOAD_NEXT" = 239,
       "DOWNLOAD_MAX" = 238,
       "SHORT_DOWNLOAD" = 237,
       "MODIFY_BITS" = 236,
       "SET_CAL_PAGE" = 235,
       "GET_CAL_PAGE" = 234,
       "GET_PAG_PROCESSOR_INFO" = 233,
       "GET_SEGMENT_INFO" = 232,
       "GET_PAGE_INFO" = 231,
       "SET_SEGMENT_MODE" = 230,
       "GET_SEGMENT_MODE" = 229,
       "COPY_CAL_PAGE" = 228,
       "CLEAR_DAQ_LIST" = 227,
       "SET_DAQ_PTR" = 226,
       "WRITE_DAQ" = 225,
       "SET_DAQ_LIST_MODE" = 224,
       "GET_DAQ_LIST_MODE" = 223,
       "START_STOP_DAQ_LIST" = 222,
       "START_STOP_SYNCH" = 221,
       "GET_DAQ_CLOCK" = 220,
       "READ_DAQ" = 219,
       "GET_DAQ_PROCESSOR_INFO" = 218,
       "GET_DAQ_RESOLUTION_INFO" = 217,
       "GET_DAQ_LIST_INFO" = 216,
       "GET_DAQ_EVENT_INFO" = 215,
       "FREE_DAQ" = 214,
       "ALLOC_DAQ" = 213,
       "ALLOC_ODT" = 212,
       "ALLOC_ODT_ENTRY" = 211,
       "PROGRAM_START" = 210,
       "PROGRAM_CLEAR" = 209,
       "PROGRAM" = 208,
       "PROGRAM_RESET" = 207,
       "GET_PGM_PROCESSOR_INFO" = 206,
       "GET_SECTOR_INFO" = 205,
       "PROGRAM_PREPARE" = 204,
       "PROGRAM_FORMAT" = 203,
       "PROGRAM_NEXT" = 202,
       "PROGRAM_MAX" = 201,
       "PROGRAM_VERIFY" = 200
       })*;
       "COMMUNICATION_MODE_SUPPORTED" taggedunion {
       "BLOCK" taggedstruct {
       "SLAVE" ;
       "MASTER" struct {
       uchar;
       uchar;
       };
       };
       "INTERLEAVED" uchar;
       };
       "SEED_AND_KEY_EXTERNAL_FUNCTION" char[256];
       };
       };
       
       struct Daq {
       enum {
       "STATIC" = 0,
       "DYNAMIC" = 1
       };
       uint;
       uint;
       uchar;
       enum {
       "OPTIMISATION_TYPE_DEFAULT" = 0,
       "OPTIMISATION_TYPE_ODT_TYPE_16" = 1,
       "OPTIMISATION_TYPE_ODT_TYPE_32" = 2,
       "OPTIMISATION_TYPE_ODT_TYPE_64" = 3,
       "OPTIMISATION_TYPE_ODT_TYPE_ALIGNMENT" = 4,
       "OPTIMISATION_TYPE_MAX_ENTRY_SIZE" = 5
       };
       enum {
       "ADDRESS_EXTENSION_FREE" = 0,
       "ADDRESS_EXTENSION_ODT" = 1,
       "ADDRESS_EXTENSION_DAQ" = 3
       };
       enum {
       "IDENTIFICATION_FIELD_TYPE_ABSOLUTE" = 0,
       "IDENTIFICATION_FIELD_TYPE_RELATIVE_BYTE" = 1,
       "IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD" = 2,
       "IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD_ALIGNED" = 3
       };
       enum {
       "GRANULARITY_ODT_ENTRY_SIZE_DAQ_BYTE" = 1,
       "GRANULARITY_ODT_ENTRY_SIZE_DAQ_WORD" = 2,
       "GRANULARITY_ODT_ENTRY_SIZE_DAQ_DWORD" = 4,
       "GRANULARITY_ODT_ENTRY_SIZE_DAQ_DLONG" = 8
       };
       uchar;
       enum {
       "NO_OVERLOAD_INDICATION" = 0,
       "OVERLOAD_INDICATION_PID" = 1,
       "OVERLOAD_INDICATION_EVENT" = 2
       };
       taggedstruct {
       "PRESCALER_SUPPORTED" ;
       "RESUME_SUPPORTED" ;
       block "STIM" struct {
       enum {
       "GRANULARITY_ODT_ENTRY_SIZE_STIM_BYTE" = 1,
       "GRANULARITY_ODT_ENTRY_SIZE_STIM_WORD" = 2,
       "GRANULARITY_ODT_ENTRY_SIZE_STIM_DWORD" = 4,
       "GRANULARITY_ODT_ENTRY_SIZE_STIM_DLONG" = 8
       };
       uchar;
       taggedstruct {
       "BIT_STIM_SUPPORTED" ;
       };
       };
       block "TIMESTAMP_SUPPORTED" struct {
       uint;
       enum {
       "NO_TIME_STAMP" = 0,
       "SIZE_BYTE" = 1,
       "SIZE_WORD" = 2,
       "SIZE_DWORD" = 4
       };
       enum {
       "UNIT_1NS" = 0,
       "UNIT_10NS" = 1,
       "UNIT_100NS" = 2,
       "UNIT_1US" = 3,
       "UNIT_10US" = 4,
       "UNIT_100US" = 5,
       "UNIT_1MS" = 6,
       "UNIT_10MS" = 7,
       "UNIT_100MS" = 8,
       "UNIT_1S" = 9
       };
       taggedstruct {
       "TIMESTAMP_FIXED" ;
       };
       };
       "PID_OFF_SUPPORTED" ;
       (block "DAQ_LIST" struct {
       uint;
       taggedstruct {
       "DAQ_LIST_TYPE" enum {
       "DAQ" = 1,
       "STIM" = 2,
       "DAQ_STIM" = 3
       };
       "MAX_ODT" uchar;
       "MAX_ODT_ENTRIES" uchar;
       "FIRST_PID" uchar;
       "EVENT_FIXED" uint;
       block "PREDEFINED" taggedstruct {
       (block "ODT" struct {
       uchar;
       taggedstruct {
       ("ODT_ENTRY" struct {
       uchar;
       ulong;
       uchar;
       uchar;
       uchar;
       })*;
       };
       })*;
       };
       };
       })*;
       (block "EVENT" struct {
       char[101];
       char[9];
       uint;
       enum {
       "DAQ" = 1,
       "STIM" = 2,
       "DAQ_STIM" = 3
       };
       uchar;
       uchar;
       uchar;
       uchar;
       })*;
       };
       };
       
       taggedunion Daq_Event {
       "FIXED_EVENT_LIST" taggedstruct {
       ("EVENT" uint)*;
       };
       "VARIABLE" taggedstruct {
       block "AVAILABLE_EVENT_LIST" taggedstruct {
       ("EVENT" uint)*;
       };
       block "DEFAULT_EVENT_LIST" taggedstruct {
       ("EVENT" uint)*;
       };
       };
       };
       
       struct Pag {
       uchar;
       taggedstruct {
       "FREEZE_SUPPORTED" ;
       };
       };
       
       struct Pgm {
       enum {
       "PGM_MODE_ABSOLUTE" = 1,
       "PGM_MODE_FUNCTIONAL" = 2,
       "PGM_MODE_ABSOLUTE_AND_FUNCTIONAL" = 3
       };
       uchar;
       uchar;
       taggedstruct {
       (block "SECTOR" struct {
       char[101];
       uchar;
       ulong;
       ulong;
       uchar;
       uchar;
       uchar;
       })*;
       "COMMUNICATION_MODE_SUPPORTED" taggedunion {
       "BLOCK" taggedstruct {
       "SLAVE" ;
       "MASTER" struct {
       uchar;
       uchar;
       };
       };
       "INTERLEAVED" uchar;
       };
       };
       };
       
       struct Segment {
       uchar;
       uchar;
       uchar;
       uchar;
       uchar;
       taggedstruct {
       block "CHECKSUM" struct {
       enum {
       "XCP_ADD_11" = 1,
       "XCP_ADD_12" = 2,
       "XCP_ADD_14" = 3,
       "XCP_ADD_22" = 4,
       "XCP_ADD_24" = 5,
       "XCP_ADD_44" = 6,
       "XCP_CRC_16" = 7,
       "XCP_CRC_16_CITT" = 8,
       "XCP_CRC_32" = 9,
       "XCP_USER_DEFINED" = 255
       };
       taggedstruct {
       "MAX_BLOCK_SIZE" ulong;
       "EXTERNAL_FUNCTION" char[256];
       };
       };
       (block "PAGE" struct {
       uchar;
       enum {
       "ECU_ACCESS_NOT_ALLOWED" = 0,
       "ECU_ACCESS_WITHOUT_XCP_ONLY" = 1,
       "ECU_ACCESS_WITH_XCP_ONLY" = 2,
       "ECU_ACCESS_DONT_CARE" = 3
       };
       enum {
       "XCP_READ_ACCESS_NOT_ALLOWED" = 0,
       "XCP_READ_ACCESS_WITHOUT_ECU_ONLY" = 1,
       "XCP_READ_ACCESS_WITH_ECU_ONLY" = 2,
       "XCP_READ_ACCESS_DONT_CARE" = 3
       };
       enum {
       "XCP_WRITE_ACCESS_NOT_ALLOWED" = 0,
       "XCP_WRITE_ACCESS_WITHOUT_ECU_ONLY" = 1,
       "XCP_WRITE_ACCESS_WITH_ECU_ONLY" = 2,
       "XCP_WRITE_ACCESS_DONT_CARE" = 3
       };
       taggedstruct {
       "INIT_SEGMENT" uchar;
       };
       })*;
       (block "ADDRESS_MAPPING" struct {
       ulong;
       ulong;
       ulong;
       })*;
       "PGM_VERIFY" ulong;
       };
       };
       
       taggedstruct Common_Parameters {
       block "PROTOCOL_LAYER" struct Protocol_Layer;
       block "SEGMENT" struct Segment;
       block "DAQ" struct Daq;
       block "PAG" struct Pag;
       block "PGM" struct Pgm;
       block "DAQ_EVENT" taggedunion Daq_Event;
       };
       
       struct CAN_Parameters {
       uint;
       taggedstruct {
       "CAN_ID_BROADCAST" ulong;
       "CAN_ID_MASTER" ulong;
       "CAN_ID_SLAVE" ulong;
       "BAUDRATE" ulong;
       "SAMPLE_POINT" uchar;
       "SAMPLE_RATE" enum {
       "SINGLE" = 1,
       "TRIPLE" = 3
       };
       "BTL_CYCLES" uchar;
       "SJW" uchar;
       "SYNC_EDGE" enum {
       "SINGLE" = 1,
       "DUAL" = 2
       };
       "MAX_DLC_REQUIRED" ;
       (block "DAQ_LIST_CAN_ID" struct {
       uint;
       taggedstruct {
       "VARIABLE" ;
       "FIXED" ulong;
       };
       })*;
       };
       };
       
       struct SxI_Parameters {
       uint;
       ulong;
       taggedstruct {
       "ASYNCH_FULL_DUPLEX_MODE" struct {
       enum {
       "PARITY_NONE" = 0,
       "PARITY_ODD" = 1,
       "PARITY_EVEN" = 2
       };
       enum {
       "ONE_STOP_BIT" = 1,
       "TWO_STOP_BITS" = 2
       };
       };
       "SYNCH_FULL_DUPLEX_MODE_BYTE" ;
       "SYNCH_FULL_DUPLEX_MODE_WORD" ;
       "SYNCH_FULL_DUPLEX_MODE_DWORD" ;
       "SYNCH_MASTER_SLAVE_MODE_BYTE" ;
       "SYNCH_MASTER_SLAVE_MODE_WORD" ;
       "SYNCH_MASTER_SLAVE_MODE_DWORD" ;
       };
       enum {
       "HEADER_LEN_BYTE" = 0,
       "HEADER_LEN_CTR_BYTE" = 1,
       "HEADER_LEN_FILL_BYTE" = 2,
       "HEADER_LEN_WORD" = 3,
       "HEADER_LEN_CTR_WORD" = 4,
       "HEADER_LEN_FILL_WORD" = 5
       };
       enum {
       "NO_CHECKSUM" = 0,
       "CHECKSUM_BYTE" = 1,
       "CHECKSUM_WORD" = 2
       };
       };
       
       struct TCP_IP_Parameters {
       uint;
       uint;
       taggedunion {
       "HOST_NAME" char[256];
       "ADDRESS" char[15];
       };
       };
       
       struct UDP_IP_Parameters {
       uint;
       uint;
       taggedunion {
       "HOST_NAME" char[256];
       "ADDRESS" char[15];
       };
       };
       
       struct ep_parameters {
       uchar;
       enum {
       "BULK_TRANSFER" = 2,
       "INTERRUPT_TRANSFER" = 3
       };
       uint;
       uchar;
       enum {
       "MESSAGE_PACKING_SINGLE" = 0,
       "MESSAGE_PACKING_MULTIPLE" = 1,
       "MESSAGE_PACKING_STREAMING" = 2
       };
       enum {
       "ALIGNMENT_8_BIT" = 0,
       "ALIGNMENT_16_BIT" = 1,
       "ALIGNMENT_32_BIT" = 2,
       "ALIGNMENT_64_BIT" = 3
       };
       taggedstruct {
       "RECOMMENDED_HOST_BUFSIZE" uint;
       };
       };
       
       struct USB_Parameters {
       uint;
       uint;
       uint;
       uchar;
       enum {
       "HEADER_LEN_BYTE" = 0,
       "HEADER_LEN_CTR_BYTE" = 1,
       "HEADER_LEN_FILL_BYTE" = 2,
       "HEADER_LEN_WORD" = 3,
       "HEADER_LEN_CTR_WORD" = 4,
       "HEADER_LEN_FILL_WORD" = 5
       }; 
       taggedunion {
       block "OUT_EP_CMD_STIM" struct ep_parameters;
       };
       taggedunion {
       block "IN_EP_RESERR_DAQ_EVSERV" struct ep_parameters;
       };
       taggedstruct {
       "ALTERNATE_SETTING_NO" uchar;
       "INTERFACE_STRING_DESCRIPTOR" char[101];
       (block "OUT_EP_ONLY_STIM" struct ep_parameters)*;
       (block "IN_EP_ONLY_DAQ" struct ep_parameters)*;
       block "IN_EP_ONLY_EVSERV" struct ep_parameters;
       (block "DAQ_LIST_USB_ENDPOINT" struct {
       uint;
       taggedstruct {
       "FIXED_IN" uchar;
       "FIXED_OUT" uchar;
       };
       })*;
       };
       };
       
       enum packet_assignment_type {
       "NOT_ALLOWED" = 0,
       "FIXED" = 1,
       "VARIABLE_INITIALISED" = 2,
       "VARIABLE" = 3
       };
       
       struct buffer {
       uchar;
       taggedstruct {
       "MAX_FLX_LEN_BUF" taggedunion {
       "FIXED" uchar;
       "VARIABLE" uchar;
       };
       block "LPDU_ID" taggedstruct {
       "FLX_SLOT_ID" taggedunion {
       "FIXED" uint;
       "VARIABLE" taggedstruct {
       "INITIAL_VALUE" uint;
       };
       }; 
       "OFFSET" taggedunion {
       "FIXED" uchar;
       "VARIABLE" taggedstruct {
       "INITIAL_VALUE" uchar;
       };
       };
       "CYCLE_REPETITION" taggedunion {
       "FIXED" uchar;
       "VARIABLE" taggedstruct {
       "INITIAL_VALUE" uchar;
       };
       };
       "CHANNEL" taggedunion {
       "FIXED" enum {
       "A" = 0,
       "B" = 1
       };
       "VARIABLE" taggedstruct {
       "INITIAL_VALUE" enum {
       "A" = 0,
       "B" = 1
       };
       };
       };
       };
       block "XCP_PACKET" taggedstruct {
       "CMD" enum packet_assignment_type;
       "RES_ERR" enum packet_assignment_type;
       "EV_SERV" enum packet_assignment_type;
       "DAQ" enum packet_assignment_type;
       "STIM" enum packet_assignment_type;
       };
       };
       };
       
       struct FLX_Parameters {
       uint;
       uint;
       char[256];
       char[256];
       uchar;
       enum {
       "HEADER_NAX" = 0,
       "HEADER_NAX_FILL" = 1,
       "HEADER_NAX_CTR" = 2,
       "HEADER_NAX_FILL3" = 3,
       "HEADER_NAX_CTR_FILL2" = 4,
       "HEADER_NAX_LEN" = 5,
       "HEADER_NAX_CTR_LEN" = 6,
       "HEADER_NAX_FILL2_LEN" = 7,
       "HEADER_NAX_CTR_FILL_LEN" = 8
       };
       enum {
       "PACKET_ALIGNMENT_8" = 0,
       "PACKET_ALIGNMENT_16" = 1,
       "PACKET_ALIGNMENT_32" = 2
       };
       taggedunion {
       block "INITIAL_CMD_BUFFER" struct buffer;
       };
       taggedunion {
       block "INITIAL_RES_ERR_BUFFER" struct buffer;
       };
       taggedstruct {
       (block "POOL_BUFFER" struct buffer)*;
       };
       };
       
       block "IF_DATA" taggedunion if_data {
       
       "CANAPE_EXT" struct {
       int;
       taggedstruct {
       "LINK_MAP" struct {
       char[256];
       long;
       uint;
       uint;
       long;
       uint;
       uint;
       uint;
       };
       "DISPLAY" struct {
       long;
       double;
       double;
       };
       "VIRTUAL_CONVERSION" struct {
       char[256];
       };
       };
       };
       "CANAPE_MODULE" struct {
       taggedstruct {
       ("RECORD_LAYOUT_STEPSIZE" struct {
       char[256];
       uint;
       uint;
       uint;
       uint;
       uint;
       uint;
       })*;
       };
       };
       "CANAPE_ADDRESS_UPDATE" taggedstruct {
       ("EPK_ADDRESS" struct {
       char[1024]; 
       long;
       })*;
       "ECU_CALIBRATION_OFFSET" struct {
       char[1024];
       long;
       };
       (block "CALIBRATION_METHOD" taggedunion {
       "AUTOSAR_SINGLE_POINTERED" struct {
       char[1024];
       long;
       taggedstruct {
       "ORIGINAL_POINTER_TABLE" struct {
       char[1024]; 
       long;
       };
       };
       };
       "InCircuit2" struct {
       char[1024];
       long;
       taggedstruct {
       "ORIGINAL_POINTER_TABLE" struct {
       char[1024];
       long;
       };
       "FLASH_SECTION" struct {
       ulong;
       ulong;
       };
       };
       };
       })*;
       block "MAP_SYMBOL" taggedstruct {
       "FIRST" struct {
       char[1024]; 
       long; 
       };
       "LAST" struct {
       char[1024]; 
       long; 
       };
       ("ADDRESS_MAPPING_XCP" struct {
       char[1024]; 
       char[1024]; 
       })*;
       };
       (block "MEMORY_SEGMENT" struct {
       char[1024];  
       taggedstruct {
       "FIRST" struct {
       char[1024]; 
       long; 
       };
       "LAST" struct {
       char[1024]; 
       long; 
       };
       ("ADDRESS_MAPPING_XCP" struct {
       char[1024]; 
       char[1024]; 
       })*;
       };
       })*;
       };
       "CANAPE_GROUP" taggedstruct {
       block "STRUCTURE_LIST" (char[1024])*;
       };
       
       "XCP" struct {
       taggedstruct Common_Parameters; 
       taggedstruct {
       block "XCP_ON_CAN" struct {
       struct CAN_Parameters; 
       taggedstruct Common_Parameters; 
       };
       block "XCP_ON_SxI" struct {
       struct SxI_Parameters; 
       taggedstruct Common_Parameters; 
       };
       block "XCP_ON_TCP_IP" struct {
       struct TCP_IP_Parameters; 
       taggedstruct Common_Parameters; 
       };
       block "XCP_ON_UDP_IP" struct {
       struct UDP_IP_Parameters; 
       taggedstruct Common_Parameters; 
       };
       block "XCP_ON_USB" struct {
       struct USB_Parameters; 
       taggedstruct Common_Parameters; 
       };
       block "XCP_ON_FLX" struct {
       struct FLX_Parameters; 
       taggedstruct Common_Parameters;
       };
       }; 
       };
       };
       ECO_XCP_Note_End*/
      
      /****************************************************************************/
      /*   ASAP2 Meta Language for CCP CAN Calibration Protocol V2.1              */
      /*   Assumes ASAP2 V1.3 or later                                            */
      /*                                                                          */
      /*   AML Version V2.4, 27.04.1999                                           */
      /*                                                                          */
      /*   Vector Informatik, Zaiser                                              */
      /*   Hewlett Packard, Krueger                                               */
      /*   ETAS, Maier                                                            */
      /*   SIEMENS Automotive, Stuhler                                            */
      /*                                                                          */
      /*   Datatypes:                                                             */
      /*                                                                          */
      /*   A2ML       ASAP2          Windows  Erlaeuuterung                       */
      /*   ----------------------------------------------------------------       */
      /*   uchar      UBYTE          BYTE     unsigned 8 Bit                      */
      /*   char       SBYTE          char     signed 8 Bit                        */
      /*   uint       UWORD          WORD     unsigned integer 16 Bit             */
      /*   int        SWORD          int      signed integer 16 Bit               */
      /*   ulong      ULONG          DWORD    unsigned integer 32 Bit             */
      /*   long       SLONG          LONG     signed integer 32 Bit               */
      /*   float      FLOAT32_IEEE            float 32 Bit                        */
      /*                                                                          */
      /****************************************************************************/
      /*ECO_CCP_Note_Start*/
      block "IF_DATA" taggedunion if_data { 
      "ASAP1B_CCP" taggedstruct {
      
      (block "SOURCE" struct {
      
      struct {
      char[101];
      int;
      long; 
      };
      
      
      taggedstruct {
      
      "DISPLAY_IDENTIFIER" char[32];
      
      block "QP_BLOB" struct {
      
      uint; 
      
      taggedstruct {
      "LENGTH" uint;
      
      "CAN_ID_VARIABLE"; 
      
      "CAN_ID_FIXED" ulong;
      
      ("RASTER" uchar)*;
      
      ("EXCLUSIVE" int)*;
      
      "REDUCTION_ALLOWED";
      
      "FIRST_PID" uchar; 
      };
      };
      };
      })*;
      
      (block "RASTER" struct {
      
      char[101]; 
      char[9]; 
      uchar; 
      int; 
      long; 
      taggedstruct {
      ("EXCLUSIVE" uchar)*;
      };
      
      })*;
      
      
      (block "EVENT_GROUP" struct {
      
      char[101]; 
      char[9];
      taggedstruct {
      ("RASTER" uchar)*;
      };
      
      })*;
      
      
      block "SEED_KEY" struct {
      char[256]; 
      char[256]; 
      char[256]; 
      };
      
      block "CHECKSUM" struct {
      char[256]; 
      };
      
      
      block "TP_BLOB" struct {
      
      uint;
      uint; 
      ulong; 
      ulong; 
      uint; 
      uint; 
      taggedstruct {
      
      block "CAN_PARAM" struct {
      uint;
      uchar;
      uchar;
      };
      
      "BAUDRATE" ulong; 
      "SAMPLE_POINT" uchar; 
      "SAMPLE_RATE" uchar;
      "BTL_CYCLES" uchar; 
      "SJW" uchar; 
      "SYNC_EDGE" enum {
      "SINGLE" = 0, 
      "DUAL" = 1 
      };
      
      "DAQ_MODE" enum { 
      "ALTERNATING" = 0, 
      "BURST" = 1 
      };
      
      "BYTES_ONLY"; 
      
      "RESUME_SUPPORTED"; 
      
      "STORE_SUPPORTED"; 
      
      "CONSISTENCY" enum {
      "DAQ" = 0, 
      "ODT" = 1 
      };
      
      "ADDRESS_EXTENSION" enum { 
      "DAQ" = 0, 
      "ODT" = 1 
      };
      
      block "CHECKSUM_PARAM" struct {
      uint; 
      
      ulong; 
      
      taggedstruct {
      "CHECKSUM_CALCULATION" enum {
      "ACTIVE_PAGE" = 0,
      "BIT_OR_WITH_OPT_PAGE" = 1
      };
      };
      };
      
      (block "DEFINED_PAGES" struct {
      struct {
      uint;
      char[101]; 
      uint; 
      ulong; 
      ulong;
      };
      taggedstruct {
      "RAM"; 
      "ROM"; 
      "FLASH";
      "EEPROM"; 
      "RAM_INIT_BY_ECU"; 
      "RAM_INIT_BY_TOOL"; 
      "AUTO_FLASH_BACK";
      "FLASH_BACK"; 
      "DEFAULT";
      };
      })*;
      
      ("OPTIONAL_CMD" uint)*; 
      };
      };
      /*EcoCoderINCAStart*/
      ("ADDRESS_MAPPING" struct 
      {
      ulong;
      ulong;
      ulong;
      })*;
      /*EcoCoderINCAEnd*/
      /*EcoCoderCANapeStart
       ("ADDR_MAPPING" struct 
       {
       ulong;
       ulong;
       ulong;
       })*;
       EcoCoderCANapeEnd*/
      "DP_BLOB" struct {
      uint; 
      ulong; 
      ulong; 
      };
      
      "KP_BLOB" struct {
      uint; 
      ulong; 
      ulong; 
      taggedstruct {
      ("RASTER" uchar)*;
      
      };
      };
      };
      }; 
      /*ECO_CCP_Note_End*/
    /end A2ML
    
    /*ECO_XCP_Note_Start
     /begin IF_DATA XCP
       /begin PROTOCOL_LAYER
         0x0100
         0x07D0
         0x2710
         0x3E8
         0x2710
         0x3E8
         0x19
         0x19
         0x08
         0x08
         BYTE_ORDER_MSB_FIRST
         ADDRESS_GRANULARITY_BYTE
         OPTIONAL_CMD ALLOC_ODT_ENTRY
         OPTIONAL_CMD ALLOC_ODT
         OPTIONAL_CMD ALLOC_DAQ
         OPTIONAL_CMD FREE_DAQ
         OPTIONAL_CMD GET_DAQ_EVENT_INFO
         OPTIONAL_CMD GET_DAQ_RESOLUTION_INFO
         OPTIONAL_CMD GET_DAQ_PROCESSOR_INFO
         OPTIONAL_CMD START_STOP_SYNCH
         OPTIONAL_CMD START_STOP_DAQ_LIST
         OPTIONAL_CMD GET_DAQ_LIST_MODE
         OPTIONAL_CMD SET_DAQ_LIST_MODE
         OPTIONAL_CMD WRITE_DAQ
         OPTIONAL_CMD SET_DAQ_PTR
         OPTIONAL_CMD CLEAR_DAQ_LIST
         OPTIONAL_CMD DOWNLOAD
         OPTIONAL_CMD SHORT_UPLOAD
         OPTIONAL_CMD UPLOAD
         OPTIONAL_CMD SET_MTA
         OPTIONAL_CMD UNLOCK
         OPTIONAL_CMD GET_SEED
         OPTIONAL_CMD GET_ID
         OPTIONAL_CMD GET_COMM_MODE_INFO
         OPTIONAL_CMD BUILD_CHECKSUM
         SEED_AND_KEY_EXTERNAL_FUNCTION ""
       /end PROTOCOL_LAYER
       /begin DAQ
         DYNAMIC
         0x00
         0x05
         0x00
         OPTIMISATION_TYPE_DEFAULT
         ADDRESS_EXTENSION_FREE
         IDENTIFICATION_FIELD_TYPE_ABSOLUTE
         GRANULARITY_ODT_ENTRY_SIZE_DAQ_BYTE
         0x07
         OVERLOAD_INDICATION_PID
         /begin STIM
           GRANULARITY_ODT_ENTRY_SIZE_STIM_BYTE
           0x07
         /end STIM
         /begin EVENT
           "5ms"
           "5ms"
           0x00
           DAQ
           0x01
           0x05
           0x06
           0x00
         /end EVENT
         /begin EVENT
           "20ms"
           "20ms"
           0x01
           DAQ
           0x01
           0x02
           0x07
           0x00
         /end EVENT
         /begin EVENT
           "50ms"
           "50ms"
           0x02
           DAQ
           0x01
           0x05
           0x07
           0x00
         /end EVENT
         /begin EVENT
           "100ms"
           "100ms"
           0x03
           DAQ
           0x01
           0x01
           0x08
           0x00
         /end EVENT
         /begin EVENT
           "200ms"
           "200m"
           0x04
           DAQ
           0x01
           0x02
           0x08
           0x00
         /end EVENT
       /end DAQ
       /begin PAG
         0x00
       /end PAG
       /begin PGM
         PGM_MODE_ABSOLUTE
         0x00
         0x00
       /end PGM
       
       /begin XCP_ON_CAN
         0x0100
         CAN_ID_MASTER 0x100
         CAN_ID_SLAVE 0x101
         BAUDRATE 500000
         SAMPLE_POINT 0x4B
         SAMPLE_RATE SINGLE
         BTL_CYCLES 0x08
         SJW 0x02
         SYNC_EDGE SINGLE
       /end XCP_ON_CAN
     /end IF_DATA
     
     /begin IF_DATA CANAPE_ADDRESS_UPDATE
     /end IF_DATA
     
     /begin MOD_PAR "_default_ModParComment"
       /begin MEMORY_SEGMENT _ROMCAL
         "calibration_rom"
         DATA
         FLASH
         INTERN
         0x00FD0000
         0x8000
         -1 -1 -1 -1 -1
         /begin IF_DATA XCP
           /begin SEGMENT
             0x00
             0x01
             0x00
             0x00
             0x00
             /begin CHECKSUM
               XCP_CRC_16_CITT
               MAX_BLOCK_SIZE 0xFFFF
               EXTERNAL_FUNCTION "String.Empty"
             /end CHECKSUM
             /begin PAGE
               0x00
               ECU_ACCESS_DONT_CARE
               XCP_READ_ACCESS_DONT_CARE
               XCP_WRITE_ACCESS_DONT_CARE
               INIT_SEGMENT 0x00
             /end PAGE
             /begin ADDRESS_MAPPING
               0x00FD0000
               0x40000000
               0x8000
             /end ADDRESS_MAPPING
           /end SEGMENT
         /end IF_DATA    
       /end MEMORY_SEGMENT
       
       /begin MEMORY_SEGMENT _CODE
         "ecu_code"
         CODE
         FLASH
         INTERN
         0x01000200
         0x1FFA00
         -1 -1 -1 -1 -1
       /end MEMORY_SEGMENT
     /end MOD_PAR
     ECO_XCP_Note_End*/
    
    
    /*ECO_CCP_Note_Start*/
    /begin MOD_PAR "_default_ModParComment"
      ADDR_EPK 0x01000100
      EPK "2022-03-01 18:01:38"
      
      /*EcoCoderINCAStart*/
      /begin MEMORY_SEGMENT _RAMCAL
        "calibration_ram"
        DATA
        RAM
        INTERN
        0x40000000
        0x8000
        -1 -1 -1 -1 -1
      /end MEMORY_SEGMENT
      /*EcoCoderINCAEnd*/
      
      /begin MEMORY_SEGMENT _ROMCAL
        "calibration_rom"
        DATA
        FLASH
        INTERN
        0x00FD0000
        0x8000
        -1 -1 -1 -1 -1
        /begin IF_DATA ASAP1B_CCP
          /*EcoCoderINCAStart*/
          ADDRESS_MAPPING  0x00FD0000 0x40000000 0x8000
          /*EcoCoderINCAEnd*/
          /*EcoCoderCANapeStart
           ADDR_MAPPING  0x00FD0000 0x40000000 0x8000
           EcoCoderCANapeEnd*/
        /end IF_DATA      
      /end MEMORY_SEGMENT
      /begin MEMORY_SEGMENT _epk_data
        "epk_data"
        DATA
        FLASH
        INTERN
        0x01000100
        0xFF
        -1 -1 -1 -1 -1
        /begin IF_DATA ASAP1B_CCP
          /*EcoCoderINCAStart*/
          ADDRESS_MAPPING  0x01000100 0x01000100 0xFF
          /*EcoCoderINCAEnd*/
          /*EcoCoderCANapeStart
           ADDR_MAPPING  0x01000100 0x01000100 0xFF
           EcoCoderCANapeEnd*/
        /end IF_DATA
      /end MEMORY_SEGMENT
      /begin MEMORY_SEGMENT _CODE
        "ecu_code"
        CODE
        FLASH
        INTERN
        0x01000200
        0x1FFA00
        -1 -1 -1 -1 -1
      /end MEMORY_SEGMENT
    /end MOD_PAR
    
    /begin IF_DATA ASAP1B_CCP 
      /begin SOURCE
        "20ms"
        3
        20
        DISPLAY_IDENTIFIER DAQ2
        /begin QP_BLOB
          1
          LENGTH 0x20
          CAN_ID_FIXED 0x101
          RASTER 1
          REDUCTION_ALLOWED
          FIRST_PID 0x3C
        /end QP_BLOB
      /end SOURCE
      /begin SOURCE
        "100ms"
        3
        100
        DISPLAY_IDENTIFIER DAQ3
        /begin QP_BLOB
          2
          LENGTH 0x30
          CAN_ID_FIXED 0x101
          RASTER 2
          REDUCTION_ALLOWED
          FIRST_PID 0x78
        /end QP_BLOB
      /end SOURCE
      /begin RASTER
        "20ms"
        "20ms"
        1
        3
        20
      /end RASTER
      /begin RASTER
        "100ms"
        "100ms"
        2
        3
        100
      /end RASTER
      /begin SEED_KEY
        ""
        ""
        ""
      /end SEED_KEY
      
      /begin CHECKSUM
        "CRC16.dll"
      /end CHECKSUM
      
      /begin TP_BLOB
        0x0201
        0x0204
        0x100
        0x101
        0x112
        1
        BAUDRATE 500000
        SAMPLE_POINT 70
        SAMPLE_RATE 1
        BTL_CYCLES 10
        SJW 1
        SYNC_EDGE SINGLE
        DAQ_MODE 0
        CONSISTENCY 1
        ADDRESS_EXTENSION 0
        RESUME_SUPPORTED
        STORE_SUPPORTED
        
        /begin CHECKSUM_PARAM          
          /*EcoCoderINCAStart*/
          0x9001
          /*EcoCoderINCAEnd*/
          /*EcoCoderCANapeStart
           0x0C
           EcoCoderCANapeEnd*/
          0xffffffff
          CHECKSUM_CALCULATION ACTIVE_PAGE
        /end CHECKSUM_PARAM
        
        /begin DEFINED_PAGES
          0x00
          "RAM_PAGE"
          0x00
          0x40000000
          0x8000
          RAM
          RAM_INIT_BY_ECU
        /end DEFINED_PAGES
        
        OPTIONAL_CMD 0X5
        OPTIONAL_CMD 0X8
        OPTIONAL_CMD 0X9
        OPTIONAL_CMD 0XC
        OPTIONAL_CMD 0XD
        OPTIONAL_CMD 0XE
        OPTIONAL_CMD 0XF
        OPTIONAL_CMD 0X10
        OPTIONAL_CMD 0X11
        OPTIONAL_CMD 0X12
        OPTIONAL_CMD 0X13
        OPTIONAL_CMD 0X18
        OPTIONAL_CMD 0X19
        OPTIONAL_CMD 0X20
        OPTIONAL_CMD 0X21
        OPTIONAL_CMD 0X22
        OPTIONAL_CMD 0X23
      /end TP_BLOB
    /end IF_DATA
    /*ECO_CCP_Note_End*/
    
    /begin MOD_COMMON
      "" /* Comment */
      ALIGNMENT_BYTE 1
      ALIGNMENT_WORD 1
      ALIGNMENT_LONG 1
      ALIGNMENT_FLOAT32_IEEE 1
      ALIGNMENT_FLOAT64_IEEE 1
      BYTE_ORDER MSB_FIRST
      DEPOSIT ABSOLUTE
    /end MOD_COMMON

    /begin RECORD_LAYOUT Scalar_BOOLEAN
      FNC_VALUES  1 UBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Scalar_UBYTE
      FNC_VALUES  1 UBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Scalar_BYTE
      FNC_VALUES  1 SBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Scalar_UWORD
      FNC_VALUES  1 UWORD COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Scalar_SWORD
      FNC_VALUES 1 SWORD COLUMN_DIR DIRECT
    /end RECORD_LAYOUT

    /begin RECORD_LAYOUT Scalar_ULONG
      FNC_VALUES  1 ULONG COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Scalar_LONG
      FNC_VALUES  1 SLONG COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Scalar_FLOAT32_IEEE
      FNC_VALUES  1 FLOAT32_IEEE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Scalar_FLOAT64_IEEE
      FNC_VALUES  1 FLOAT64_IEEE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_BOOLEAN
      FNC_VALUES  1 UBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_X_BOOLEAN
      AXIS_PTS_X  1 UBYTE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_BYTE
      FNC_VALUES  1 SBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_X_BYTE
      AXIS_PTS_X  1 SBYTE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_UBYTE
      FNC_VALUES  1 UBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_X_UBYTE
      AXIS_PTS_X  1 UBYTE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_UWORD
      FNC_VALUES  1 UWORD COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_X_UWORD
      AXIS_PTS_X  1 UWORD INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_WORD
      FNC_VALUES  1 SWORD COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_X_WORD
      AXIS_PTS_X  1 SWORD INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_ULONG
      FNC_VALUES  1 ULONG COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_X_ULONG
      AXIS_PTS_X  1 ULONG INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_SLONG
      FNC_VALUES  1 SLONG COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_X_LONG
      AXIS_PTS_X  1 SLONG INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_FLOAT32_IEEE
      FNC_VALUES  1 FLOAT32_IEEE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_X_FLOAT32_IEEE
      AXIS_PTS_X  1 FLOAT32_IEEE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_FLOAT64_IEEE
      FNC_VALUES  1 FLOAT64_IEEE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup1D_X_FLOAT64_IEEE
      AXIS_PTS_X  1 FLOAT64_IEEE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_BOOLEAN
      FNC_VALUES  1 UBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_X_BOOLEAN
      AXIS_PTS_X  1 UBYTE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_UBYTE
      FNC_VALUES  1 UBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_X_UBYTE
      AXIS_PTS_X  1 UBYTE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_BYTE
      FNC_VALUES  1 SBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_X_BYTE
      AXIS_PTS_X  1 SBYTE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_UWORD
      FNC_VALUES  1 UWORD COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_X_UWORD
      AXIS_PTS_X  1 UWORD INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_WORD
      FNC_VALUES  1 SWORD COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_X_WORD
      AXIS_PTS_X  1 SWORD INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_ULONG
      FNC_VALUES  1 ULONG COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_X_ULONG
      AXIS_PTS_X  1 ULONG INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_LONG
      FNC_VALUES  1 SLONG COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_X_LONG
      AXIS_PTS_X  1 SLONG INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_FLOAT32_IEEE
      FNC_VALUES  1 FLOAT32_IEEE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_X_FLOAT32_IEEE
      AXIS_PTS_X 1 FLOAT32_IEEE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_FLOAT64_IEEE
      FNC_VALUES  1  FLOAT64_IEEE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT Lookup2D_X_FLOAT64_IEEE
      AXIS_PTS_X 1 FLOAT64_IEEE INDEX_INCR DIRECT
    /end   RECORD_LAYOUT

    /begin CHARACTERISTIC      
      /* Name                   */      Vdc_bus_V_cur
      /* Long Identifier        */      ""
      /* Characteristic Type    */      CURVE
      /* ECU Address            */      0x0000 /* @ECU_Address@Vdc_bus_V_cur@ */
      /* Record Layout          */      Lookup1D_WORD
      /* Maxdiff                */      0
      /* Conversion Method      */      VCU_TDN_CM_int16
      /* Lower Limit            */      -32768
      /* Upper Limit            */      32767
      /begin AXIS_DESCR                 
        /* Description of X-Axis Points */
        /* Axis Type            */      COM_AXIS
        /* Reference to Input   */      NO_INPUT_QUANTITY
        /* Conversion Method    */      VCU_TDN_CM_int16
        /* Number of Axis Pts   */      42
        /* Lower Limit          */      -32768
        /* Upper Limit          */      32767
        AXIS_PTS_REF                    Vdc_bus_V_bp
      /end AXIS_DESCR
    /end CHARACTERISTIC

    /begin CHARACTERISTIC      
      /* Name                   */      T_IGBT_conversion_cur
      /* Long Identifier        */      ""
      /* Characteristic Type    */      CURVE
      /* ECU Address            */      0x0000 /* @ECU_Address@T_IGBT_conversion_cur@ */
      /* Record Layout          */      Lookup1D_WORD
      /* Maxdiff                */      0
      /* Conversion Method      */      VCU_TDN_CM_int16
      /* Lower Limit            */      -32768
      /* Upper Limit            */      32767
      /begin AXIS_DESCR                 
        /* Description of X-Axis Points */
        /* Axis Type            */      COM_AXIS
        /* Reference to Input   */      NO_INPUT_QUANTITY
        /* Conversion Method    */      VCU_TDN_CM_int16
        /* Number of Axis Pts   */      39
        /* Lower Limit          */      -32768
        /* Upper Limit          */      32767
        AXIS_PTS_REF                    T_IGBT_conversion_bp
      /end AXIS_DESCR
    /end CHARACTERISTIC

    /begin CHARACTERISTIC      
      /* Name                   */      T_motor_conversion_cur
      /* Long Identifier        */      ""
      /* Characteristic Type    */      CURVE
      /* ECU Address            */      0x0000 /* @ECU_Address@T_motor_conversion_cur@ */
      /* Record Layout          */      Lookup1D_WORD
      /* Maxdiff                */      0
      /* Conversion Method      */      VCU_TDN_CM_int16
      /* Lower Limit            */      -32768
      /* Upper Limit            */      32767
      /begin AXIS_DESCR                 
        /* Description of X-Axis Points */
        /* Axis Type            */      COM_AXIS
        /* Reference to Input   */      NO_INPUT_QUANTITY
        /* Conversion Method    */      VCU_TDN_CM_int16
        /* Number of Axis Pts   */      39
        /* Lower Limit          */      -32768
        /* Upper Limit          */      32767
        AXIS_PTS_REF                    T_motor_conversion_bp
      /end AXIS_DESCR
    /end CHARACTERISTIC

    /begin CHARACTERISTIC      
      /* Name                   */      T_air_conversion_cur
      /* Long Identifier        */      ""
      /* Characteristic Type    */      CURVE
      /* ECU Address            */      0x0000 /* @ECU_Address@T_air_conversion_cur@ */
      /* Record Layout          */      Lookup1D_WORD
      /* Maxdiff                */      0
      /* Conversion Method      */      VCU_TDN_CM_int16
      /* Lower Limit            */      -32768
      /* Upper Limit            */      32767
      /begin AXIS_DESCR                 
        /* Description of X-Axis Points */
        /* Axis Type            */      COM_AXIS
        /* Reference to Input   */      NO_INPUT_QUANTITY
        /* Conversion Method    */      VCU_TDN_CM_int16
        /* Number of Axis Pts   */      29
        /* Lower Limit          */      -32768
        /* Upper Limit          */      32767
        AXIS_PTS_REF                    T_air_conversion_bp
      /end AXIS_DESCR
    /end CHARACTERISTIC

    /begin AXIS_PTS
      /* Name                   */      Vdc_bus_V_bp
      /* Long Identifier        */      ""
      /* ECU Address            */      0x0000 /* @ECU_Address@Vdc_bus_V_bp@ */
      /* Input Quantity         */      NO_INPUT_QUANTITY
      /* Record Layout          */      Lookup1D_X_WORD
      /* Maximum Difference     */      0
      /* Conversion Method      */      VCU_TDN_CM_int16
      /* Number of Axis Pts     */      42
      /* Lower Limit            */      -32768
      /* Upper Limit            */      32767
    /end AXIS_PTS

    /begin AXIS_PTS
      /* Name                   */      T_IGBT_conversion_bp
      /* Long Identifier        */      ""
      /* ECU Address            */      0x0000 /* @ECU_Address@T_IGBT_conversion_bp@ */
      /* Input Quantity         */      NO_INPUT_QUANTITY
      /* Record Layout          */      Lookup1D_X_WORD
      /* Maximum Difference     */      0
      /* Conversion Method      */      VCU_TDN_CM_int16
      /* Number of Axis Pts     */      39
      /* Lower Limit            */      -32768
      /* Upper Limit            */      32767
    /end AXIS_PTS

    /begin AXIS_PTS
      /* Name                   */      T_motor_conversion_bp
      /* Long Identifier        */      ""
      /* ECU Address            */      0x0000 /* @ECU_Address@T_motor_conversion_bp@ */
      /* Input Quantity         */      NO_INPUT_QUANTITY
      /* Record Layout          */      Lookup1D_X_WORD
      /* Maximum Difference     */      0
      /* Conversion Method      */      VCU_TDN_CM_int16
      /* Number of Axis Pts     */      39
      /* Lower Limit            */      -32768
      /* Upper Limit            */      32767
    /end AXIS_PTS

    /begin AXIS_PTS
      /* Name                   */      T_air_conversion_bp
      /* Long Identifier        */      ""
      /* ECU Address            */      0x0000 /* @ECU_Address@T_air_conversion_bp@ */
      /* Input Quantity         */      NO_INPUT_QUANTITY
      /* Record Layout          */      Lookup1D_X_WORD
      /* Maximum Difference     */      0
      /* Conversion Method      */      VCU_TDN_CM_int16
      /* Number of Axis Pts     */      29
      /* Lower Limit            */      -32768
      /* Upper Limit            */      32767
    /end AXIS_PTS

    /begin MEASUREMENT
      /* Name                   */      APPS_M
      /* Long identifier        */      ""
      /* Data type              */      FLOAT32_IEEE
      /* Conversion method      */      VCU_TDN_CM_single__
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -3.4E+38
      /* Upper limit            */      3.4E+38
      ECU_ADDRESS                       0x0000 /* @ECU_Address@APPS_M@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      FR_BRK_PRESSURE
      /* Long identifier        */      ""
      /* Data type              */      FLOAT32_IEEE
      /* Conversion method      */      VCU_TDN_CM_single_bar
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -3.4E+38
      /* Upper limit            */      3.4E+38
      ECU_ADDRESS                       0x0000 /* @ECU_Address@FR_BRK_PRESSURE@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      RR_BRAKE_PRESSURE
      /* Long identifier        */      ""
      /* Data type              */      FLOAT32_IEEE
      /* Conversion method      */      VCU_TDN_CM_single_bar
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -3.4E+38
      /* Upper limit            */      3.4E+38
      ECU_ADDRESS                       0x0000 /* @ECU_Address@RR_BRAKE_PRESSURE@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      APPS_1
      /* Long identifier        */      ""
      /* Data type              */      UWORD
      /* Conversion method      */      VCU_TDN_CM_uint16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      65535
      ECU_ADDRESS                       0x0000 /* @ECU_Address@APPS_1@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      APPS_2
      /* Long identifier        */      ""
      /* Data type              */      UWORD
      /* Conversion method      */      VCU_TDN_CM_uint16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      65535
      ECU_ADDRESS                       0x0000 /* @ECU_Address@APPS_2@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      N_lim
      /* Long identifier        */      ""
      /* Data type              */      UWORD
      /* Conversion method      */      VCU_TDN_CM_uint16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      65535
      ECU_ADDRESS                       0x0000 /* @ECU_Address@N_lim@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      N_100
      /* Long identifier        */      ""
      /* Data type              */      UWORD
      /* Conversion method      */      VCU_TDN_CM_uint16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      65535
      ECU_ADDRESS                       0x0000 /* @ECU_Address@N_100@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      Vdc_bus_V
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16_V
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@Vdc_bus_V@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      I_act_filt_A
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16_A
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@I_act_filt_A@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      N_act_filt_RPM
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16_RPM
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@N_act_filt_RPM@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      Speed
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16_km_h
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@Speed@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      T_air_deg
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16__C
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@T_air_deg@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      T_motor_deg
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16__C
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@T_motor_deg@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      T_IGBT_deg
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16__C
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@T_IGBT_deg@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      CURRENT_CH_1
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16_A
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@CURRENT_CH_1@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      CURRENT_CH_2
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16_A
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@CURRENT_CH_2@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      T_air
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@T_air@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      T_motor
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@T_motor@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      T_IGBT
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@T_IGBT@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      I_cmd
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@I_cmd@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      I_act_filt
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@I_act_filt@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      Vdc_bus
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@Vdc_bus@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      I_200
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@I_200@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      I_device
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@I_device@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      I_max_pk
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@I_max_pk@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      I_nom_eff
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@I_nom_eff@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      I_max_eff
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@I_max_eff@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      SpeedRPMmax
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@SpeedRPMmax@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      N_act_filt
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@N_act_filt@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      N_R_Dec
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@N_R_Dec@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      M_R_Dec
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@M_R_Dec@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      N_R_Acc
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@N_R_Acc@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      M_R_Acc
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@M_R_Acc@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      N_lim_neg
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@N_lim_neg@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      N_lim_pos
      /* Long identifier        */      ""
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@N_lim_pos@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      PwrM_flgKeyOnDelay
      /* Long identifier        */      ""
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@PwrM_flgKeyOnDelay@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      PwrM_flgKeyOnRaw
      /* Long identifier        */      ""
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@PwrM_flgKeyOnRaw@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      BRK_PDL_FAULT
      /* Long identifier        */      ""
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@BRK_PDL_FAULT@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      BRK_CONTACTOR
      /* Long identifier        */      ""
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@BRK_CONTACTOR@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      RDY_DRV_BUTTON
      /* Long identifier        */      ""
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@RDY_DRV_BUTTON@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      RDY_DRV
      /* Long identifier        */      ""
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@RDY_DRV@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      BATT_FAN_ON
      /* Long identifier        */      ""
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@BATT_FAN_ON@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      FAN_ON
      /* Long identifier        */      ""
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@FAN_ON@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      PUMP_ON
      /* Long identifier        */      ""
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@PUMP_ON@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      APPS_FAULT
      /* Long identifier        */      ""
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@APPS_FAULT@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmAPPS_M
      /* Long identifier        */      "VCU_TDN/Code/APPS and torque setpoint/Throttle setpoint for the inverter/Write NVM"
      /* Data type              */      FLOAT32_IEEE
      /* Conversion method      */      VCU_TDN_CM_single
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -3.4E+38
      /* Upper limit            */      3.4E+38
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmAPPS_M@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmI_200
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_200/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmI_200@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmI_act_filt
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_act_filt/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmI_act_filt@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmI_cmd
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_cmd/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmI_cmd@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmI_device
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_device/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmI_device@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmI_max_eff
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_max_eff/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmI_max_eff@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmI_max_pk
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_max_pk/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmI_max_pk@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmI_nom_eff
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_nom_eff/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmI_nom_eff@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmM_R_Acc
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_R_Acc | M R_Acc/Write NVM1"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmM_R_Acc@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmM_R_Dec
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_R_Dec | M_R_Dec/Write NVM1"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmM_R_Dec@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmN_R_Acc
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_R_Acc | M R_Acc/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmN_R_Acc@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmN_R_Dec
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_R_Dec | M_R_Dec/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmN_R_Dec@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmN_act_filt
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_act_filt/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmN_act_filt@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmN_lim_neg
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_Lim_neg/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmN_lim_neg@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmN_lim_pos
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_Lim_pos/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmN_lim_pos@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmSpeedRPMmax
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/SpeedRPMmax/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmSpeedRPMmax@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmT_IGBT
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/T_IGBT/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmT_IGBT@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmT_air
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/T_air/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmT_air@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmT_motor
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/T_motor/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmT_motor@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmVdc_bus
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/Vdc_bus/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmVdc_bus@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmI_act_filt_A
      /* Long identifier        */      "VCU_TDN/Code/Data processing/Electrical/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmI_act_filt_A@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmN_act_filt_RPM
      /* Long identifier        */      "VCU_TDN/Code/Data processing/Speed/Write NVM1"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmN_act_filt_RPM@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmSpeed
      /* Long identifier        */      "VCU_TDN/Code/Data processing/Speed/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmSpeed@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmT_IGBT_deg
      /* Long identifier        */      "VCU_TDN/Code/Data processing/Temperature/Write NVM"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmT_IGBT_deg@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmT_air_deg
      /* Long identifier        */      "VCU_TDN/Code/Data processing/Temperature/Write NVM2"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmT_air_deg@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmT_motor_deg
      /* Long identifier        */      "VCU_TDN/Code/Data processing/Temperature/Write NVM1"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmT_motor_deg@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmVdc_bus_V
      /* Long identifier        */      "VCU_TDN/Code/Data processing/Electrical/Write NVM2"
      /* Data type              */      SWORD
      /* Conversion method      */      VCU_TDN_CM_int16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      -32768
      /* Upper limit            */      32767
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmVdc_bus_V@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmAPPS_1
      /* Long identifier        */      "VCU_TDN/Code/APPS and torque setpoint/Write NVM"
      /* Data type              */      UWORD
      /* Conversion method      */      VCU_TDN_CM_uint16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      65535
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmAPPS_1@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmAPPS_2
      /* Long identifier        */      "VCU_TDN/Code/APPS and torque setpoint/Write NVM1"
      /* Data type              */      UWORD
      /* Conversion method      */      VCU_TDN_CM_uint16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      65535
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmAPPS_2@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmN_100
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_100/Write NVM"
      /* Data type              */      UWORD
      /* Conversion method      */      VCU_TDN_CM_uint16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      65535
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmN_100@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmN_lim
      /* Long identifier        */      "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_Lim/Write NVM"
      /* Data type              */      UWORD
      /* Conversion method      */      VCU_TDN_CM_uint16
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      65535
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmN_lim@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmAPPS_FAULT
      /* Long identifier        */      "VCU_TDN/Code/APPS and torque setpoint/APPS Fault detection/Write NVM"
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmAPPS_FAULT@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmBRK_CONTACTOR
      /* Long identifier        */      "VCU_TDN/Code/Ready to drive/Write NVM"
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmBRK_CONTACTOR@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmBRK_PDL_FAULT
      /* Long identifier        */      "VCU_TDN/Code/Brake pedal plausibility check/Write NVM"
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmBRK_PDL_FAULT@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmRDY_DRV
      /* Long identifier        */      "VCU_TDN/Code/Ready to drive/Write NVM2"
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmRDY_DRV@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmRDY_DRV_BUTTON
      /* Long identifier        */      "VCU_TDN/Code/Ready to drive/Write NVM1"
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmRDY_DRV_BUTTON@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmBATT_FAN_ON
      /* Long identifier        */      "VCU_TDN/Code/Pump and fans/Write NVM2"
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmBATT_FAN_ON@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmFAN_ON
      /* Long identifier        */      "VCU_TDN/Code/Pump and fans/Write NVM1"
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmFAN_ON@ */
    /end MEASUREMENT
    
    
    /begin MEASUREMENT
      /* Name                   */      nvmPUMP_ON
      /* Long identifier        */      "VCU_TDN/Code/Pump and fans/Write NVM"
      /* Data type              */      UBYTE
      /* Conversion method      */      VCU_TDN_CM_boolean
      /* Resolution (Not used)  */      0
      /* Accuracy (Not used)    */      0
      /* Lower limit            */      0
      /* Upper limit            */      1
      ECU_ADDRESS                       0x0000 /* @ECU_Address@nvmPUMP_ON@ */
    /end MEASUREMENT

    /begin COMPU_METHOD
      /* Name of CompuMethod    */      VCU_TDN_CM_int16
      /* Long identifier        */      "Q = V"
      /* Conversion Type        */      RAT_FUNC
      /* Format                 */      "%5.0"
      /* Units                  */      ""
      /* Coefficients           */      COEFFS 0 1 0 0 0 1
    /end COMPU_METHOD

    /begin COMPU_METHOD
      /* Name of CompuMethod    */      VCU_TDN_CM_single__
      /* Long identifier        */      "Q = V"
      /* Conversion Type        */      RAT_FUNC
      /* Format                 */      "%8.6"
      /* Units                  */      "%"
      /* Coefficients           */      COEFFS 0 1 0 0 0 1
    /end COMPU_METHOD

    /begin COMPU_METHOD
      /* Name of CompuMethod    */      VCU_TDN_CM_single_bar
      /* Long identifier        */      "Q = V"
      /* Conversion Type        */      RAT_FUNC
      /* Format                 */      "%8.6"
      /* Units                  */      "bar"
      /* Coefficients           */      COEFFS 0 1 0 0 0 1
    /end COMPU_METHOD

    /begin COMPU_METHOD
      /* Name of CompuMethod    */      VCU_TDN_CM_uint16
      /* Long identifier        */      "Q = V"
      /* Conversion Type        */      RAT_FUNC
      /* Format                 */      "%5.0"
      /* Units                  */      ""
      /* Coefficients           */      COEFFS 0 1 0 0 0 1
    /end COMPU_METHOD

    /begin COMPU_METHOD
      /* Name of CompuMethod    */      VCU_TDN_CM_int16_V
      /* Long identifier        */      "Q = V"
      /* Conversion Type        */      RAT_FUNC
      /* Format                 */      "%5.0"
      /* Units                  */      "V"
      /* Coefficients           */      COEFFS 0 1 0 0 0 1
    /end COMPU_METHOD

    /begin COMPU_METHOD
      /* Name of CompuMethod    */      VCU_TDN_CM_int16_A
      /* Long identifier        */      "Q = V"
      /* Conversion Type        */      RAT_FUNC
      /* Format                 */      "%5.0"
      /* Units                  */      "A"
      /* Coefficients           */      COEFFS 0 1 0 0 0 1
    /end COMPU_METHOD

    /begin COMPU_METHOD
      /* Name of CompuMethod    */      VCU_TDN_CM_int16_RPM
      /* Long identifier        */      "Q = V"
      /* Conversion Type        */      RAT_FUNC
      /* Format                 */      "%5.0"
      /* Units                  */      "RPM"
      /* Coefficients           */      COEFFS 0 1 0 0 0 1
    /end COMPU_METHOD

    /begin COMPU_METHOD
      /* Name of CompuMethod    */      VCU_TDN_CM_int16_km_h
      /* Long identifier        */      "Q = V"
      /* Conversion Type        */      RAT_FUNC
      /* Format                 */      "%5.0"
      /* Units                  */      "km/h"
      /* Coefficients           */      COEFFS 0 1 0 0 0 1
    /end COMPU_METHOD

    /begin COMPU_METHOD
      /* Name of CompuMethod    */      VCU_TDN_CM_int16__C
      /* Long identifier        */      "Q = V"
      /* Conversion Type        */      RAT_FUNC
      /* Format                 */      "%5.0"
      /* Units                  */      "°C"
      /* Coefficients           */      COEFFS 0 1 0 0 0 1
    /end COMPU_METHOD

    /begin COMPU_METHOD
      /* Name of CompuMethod    */      VCU_TDN_CM_boolean
      /* Long identifier        */      "Q = V"
      /* Conversion Type        */      RAT_FUNC
      /* Format                 */      "%1.0"
      /* Units                  */      ""
      /* Coefficients           */      COEFFS 0 1 0 0 0 1
    /end COMPU_METHOD

    /begin COMPU_METHOD
      /* Name of CompuMethod    */      VCU_TDN_CM_single
      /* Long identifier        */      "Q = V"
      /* Conversion Type        */      RAT_FUNC
      /* Format                 */      "%8.6"
      /* Units                  */      ""
      /* Coefficients           */      COEFFS 0 1 0 0 0 1
    /end COMPU_METHOD

    /begin GROUP 
      /* Name                   */       VCU_TDN
      /* Long identifier        */       "VCU_TDN"
      /* Root                    */       ROOT
      /begin SUB_GROUP
        Root_Code
        Root_Power_Management_Example
      /end SUB_GROUP
      /begin REF_MEASUREMENT
        nvmAPPS_1
        nvmAPPS_2
        nvmAPPS_FAULT
        nvmAPPS_M
        nvmBATT_FAN_ON
        nvmBRK_CONTACTOR
        nvmBRK_PDL_FAULT
        nvmFAN_ON
        nvmI_200
        nvmI_act_filt
        nvmI_act_filt_A
        nvmI_cmd
        nvmI_device
        nvmI_max_eff
        nvmI_max_pk
        nvmI_nom_eff
        nvmM_R_Acc
        nvmM_R_Dec
        nvmN_100
        nvmN_R_Acc
        nvmN_R_Dec
        nvmN_act_filt
        nvmN_act_filt_RPM
        nvmN_lim
        nvmN_lim_neg
        nvmN_lim_pos
        nvmPUMP_ON
        nvmRDY_DRV
        nvmRDY_DRV_BUTTON
        nvmSpeed
        nvmSpeedRPMmax
        nvmT_IGBT
        nvmT_IGBT_deg
        nvmT_air
        nvmT_air_deg
        nvmT_motor
        nvmT_motor_deg
        nvmVdc_bus
        nvmVdc_bus_V
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       Root_Code
      /* Long identifier        */       "VCU_TDN/Code"
      /begin SUB_GROUP
        S1_APPS_and_torque_setpoint
        S1_Brake_pedal_plausibility_check
        S1_Data_processing
        S1_Pump_and_fans
        S1_Ready_to_drive
        S1_Receiving_data
      /end SUB_GROUP
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       Root_Power_Management_Example
      /* Long identifier        */       "VCU_TDN/Power Management Example"
      /begin SUB_GROUP
        S3_Power_Off_Management
      /end SUB_GROUP
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S1_APPS_and_torque_setpoint
      /* Long identifier        */       "VCU_TDN/Code/APPS and torque setpoint"
      /begin SUB_GROUP
        S4_APPS_Fault_detection
        S4_Throttle_setpoint_for_the_inverter
      /end SUB_GROUP
      /begin REF_MEASUREMENT
        APPS_1
        APPS_2
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S1_Brake_pedal_plausibility_check
      /* Long identifier        */       "VCU_TDN/Code/Brake pedal plausibility check"
      /begin REF_MEASUREMENT
        BRK_PDL_FAULT
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S1_Data_processing
      /* Long identifier        */       "VCU_TDN/Code/Data processing"
      /begin SUB_GROUP
        S7_Electrical
        S7_Speed
        S7_Temperature
      /end SUB_GROUP
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S1_Pump_and_fans
      /* Long identifier        */       "VCU_TDN/Code/Pump and fans"
      /begin REF_MEASUREMENT
        BATT_FAN_ON
        FAN_ON
        PUMP_ON
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S1_Ready_to_drive
      /* Long identifier        */       "VCU_TDN/Code/Ready to drive"
      /begin SUB_GROUP
        S10_SR_Flip_Flop
      /end SUB_GROUP
      /begin REF_MEASUREMENT
        BRK_CONTACTOR
        RDY_DRV_BUTTON
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S1_Receiving_data
      /* Long identifier        */       "VCU_TDN/Code/Receiving data"
      /begin SUB_GROUP
        S11_Inverter
        S11_Sensors
      /end SUB_GROUP
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S3_Power_Off_Management
      /* Long identifier        */       "VCU_TDN/Power Management Example/Power Off Management"
      /begin SUB_GROUP
        S116_Get_flgKeyOn
        S116_TOfD_xxxx1
      /end SUB_GROUP
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S4_APPS_Fault_detection
      /* Long identifier        */       "VCU_TDN/Code/APPS and torque setpoint/APPS Fault detection"
      /begin REF_MEASUREMENT
        APPS_FAULT
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S4_Throttle_setpoint_for_the_inverter
      /* Long identifier        */       "VCU_TDN/Code/APPS and torque setpoint/Throttle setpoint for the inverter"
      /begin REF_MEASUREMENT
        APPS_M
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S7_Electrical
      /* Long identifier        */       "VCU_TDN/Code/Data processing/Electrical"
      /begin REF_CHARACTERISTIC
        Vdc_bus_V_cur
      /end REF_CHARACTERISTIC
      /begin REF_MEASUREMENT
        I_act_filt_A
        Vdc_bus_V
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S7_Speed
      /* Long identifier        */       "VCU_TDN/Code/Data processing/Speed"
      /begin REF_MEASUREMENT
        N_act_filt_RPM
        Speed
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S7_Temperature
      /* Long identifier        */       "VCU_TDN/Code/Data processing/Temperature"
      /begin REF_CHARACTERISTIC
        T_IGBT_conversion_cur
        T_air_conversion_cur
        T_motor_conversion_cur
      /end REF_CHARACTERISTIC
      /begin REF_MEASUREMENT
        T_IGBT_deg
        T_air_deg
        T_motor_deg
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S10_SR_Flip_Flop
      /* Long identifier        */       "VCU_TDN/Code/Ready to drive/SR Flip Flop"
      /begin REF_MEASUREMENT
        RDY_DRV
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S11_Inverter
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter"
      /begin SUB_GROUP
        S64_Data_saving
      /end SUB_GROUP
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S11_Sensors
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Sensors"
      /begin REF_MEASUREMENT
        CURRENT_CH_1
        CURRENT_CH_2
        FR_BRK_PRESSURE
        RR_BRAKE_PRESSURE
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S116_Get_flgKeyOn
      /* Long identifier        */       "VCU_TDN/Power Management Example/Power Off Management/Get flgKeyOn"
      /begin REF_MEASUREMENT
        PwrM_flgKeyOnRaw
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S116_TOfD_xxxx1
      /* Long identifier        */       "VCU_TDN/Power Management Example/Power Off Management/TOfD_xxxx1"
      /begin REF_MEASUREMENT
        PwrM_flgKeyOnDelay
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S64_Data_saving
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving"
      /begin SUB_GROUP
        S66_I_200
        S66_I_act_filt
        S66_I_cmd
        S66_I_device
        S66_I_max_eff
        S66_I_max_pk
        S66_I_nom_eff
        S66_N_100
        S66_N_Lim
        S66_N_Lim_neg
        S66_N_Lim_pos
        S66_N_R_Acc___M_R_Acc
        S66_N_R_Dec___M_R_Dec
        S66_N_act_filt
        S66_SpeedRPMmax
        S66_T_IGBT
        S66_T_air
        S66_T_motor
        S66_Vdc_bus
      /end SUB_GROUP
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_I_200
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_200"
      /begin REF_MEASUREMENT
        I_200
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_I_act_filt
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_act_filt"
      /begin REF_MEASUREMENT
        I_act_filt
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_I_cmd
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_cmd"
      /begin REF_MEASUREMENT
        I_cmd
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_I_device
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_device"
      /begin REF_MEASUREMENT
        I_device
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_I_max_eff
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_max_eff"
      /begin REF_MEASUREMENT
        I_max_eff
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_I_max_pk
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_max_pk"
      /begin REF_MEASUREMENT
        I_max_pk
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_I_nom_eff
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/I_nom_eff"
      /begin REF_MEASUREMENT
        I_nom_eff
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_N_100
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_100"
      /begin REF_MEASUREMENT
        N_100
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_N_Lim
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_Lim"
      /begin REF_MEASUREMENT
        N_lim
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_N_Lim_neg
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_Lim_neg"
      /begin REF_MEASUREMENT
        N_lim_neg
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_N_Lim_pos
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_Lim_pos"
      /begin REF_MEASUREMENT
        N_lim_pos
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_N_R_Acc___M_R_Acc
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_R_Acc | M R_Acc"
      /begin REF_MEASUREMENT
        M_R_Acc
        N_R_Acc
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_N_R_Dec___M_R_Dec
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_R_Dec | M_R_Dec"
      /begin REF_MEASUREMENT
        M_R_Dec
        N_R_Dec
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_N_act_filt
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/N_act_filt"
      /begin REF_MEASUREMENT
        N_act_filt
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_SpeedRPMmax
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/SpeedRPMmax"
      /begin REF_MEASUREMENT
        SpeedRPMmax
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_T_IGBT
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/T_IGBT"
      /begin REF_MEASUREMENT
        T_IGBT
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_T_air
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/T_air"
      /begin REF_MEASUREMENT
        T_air
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_T_motor
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/T_motor"
      /begin REF_MEASUREMENT
        T_motor
      /end REF_MEASUREMENT
    /end GROUP
    
    /begin GROUP 
      /* Name                   */       S66_Vdc_bus
      /* Long identifier        */       "VCU_TDN/Code/Receiving data/Inverter/Data saving/Vdc_bus"
      /begin REF_MEASUREMENT
        Vdc_bus
      /end REF_MEASUREMENT
    /end GROUP

/end MODULE
  
  
/end PROJECT
/* (add any file trailer comments here) */
/* EOF VCU_TDN.a2l */

