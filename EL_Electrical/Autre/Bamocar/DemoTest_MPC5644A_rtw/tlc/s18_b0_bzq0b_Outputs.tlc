%implements s18_b0_bzq0b_Outputs "C"

%function OutputsForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS18B0 = OpaqueTLCBlockFcn("Outputs", 18, 0, 3, 1, 0)
%assign tlcOutputsFcnOfS18B2 = OpaqueTLCBlockFcn("Outputs", 18, 2, 3, 1, 1)
%assign tlcOutputsFcnOfS18B4Tid0 = OpaqueTLCBlockFcnForTID("Outputs", 18, 4, 0, 3, 1, 2)
%assign tlcOutputsFcnOfS18B5 = OpaqueTLCBlockFcn("Outputs", 18, 5, 3, 1, 3)
%assign tlcOutputsFcnOfS18B6 = OpaqueTLCBlockFcn("Outputs", 18, 6, 3, 1, 4)
%assign tlcOutputsFcnOfS18B7 = OpaqueTLCBlockFcn("Outputs", 18, 7, 3, 1, 5)
%assign tlcOutputsFcnOfS18B8 = OpaqueTLCBlockFcn("Outputs", 18, 8, 3, 1, 6)
%assign   Outputs_open_Task_Call_18_0 = ""
%openfile Outputs_open_Task_Call_18_0

/* S-Function (EcoCoder_Task): '<S2>/Task_Call' */
%closefile Outputs_open_Task_Call_18_0

%assign    Outputs_body_Task_Call_18_0 = ""
%openfile  Outputs_body_Task_Call_18_0

%<SLibCG_DumpSSCode("/*@[15fdb*/",tlcOutputsFcnOfS18B0,"/*@]*/")>\
%closefile Outputs_body_Task_Call_18_0

%assign    Outputs_close_Task_Call_18_0 = ""
%openfile  Outputs_close_Task_Call_18_0

/* End of Outputs for S-Function (EcoCoder_Task): '<S2>/Task_Call' */
%closefile Outputs_close_Task_Call_18_0
%<SLibCG_DumpSSCode(Outputs_open_Task_Call_18_0, Outputs_body_Task_Call_18_0, Outputs_close_Task_Call_18_0)>


%assign   Outputs_open_TaskTrigger_18_2 = ""
%openfile Outputs_open_TaskTrigger_18_2

/* S-Function (EcoCoder_Task): '<S1>/Task Trigger' */
%closefile Outputs_open_TaskTrigger_18_2

%assign    Outputs_body_TaskTrigger_18_2 = ""
%openfile  Outputs_body_TaskTrigger_18_2

%<SLibCG_DumpSSCode("/*@[15fde*/",tlcOutputsFcnOfS18B2,"/*@]*/")>\
%closefile Outputs_body_TaskTrigger_18_2

%assign    Outputs_close_TaskTrigger_18_2 = ""
%openfile  Outputs_close_TaskTrigger_18_2

/* End of Outputs for S-Function (EcoCoder_Task): '<S1>/Task Trigger' */
%closefile Outputs_close_TaskTrigger_18_2
%<SLibCG_DumpSSCode(Outputs_open_TaskTrigger_18_2, Outputs_body_TaskTrigger_18_2, Outputs_close_TaskTrigger_18_2)>

%if !WHITE_SPACE(tlcOutputsFcnOfS18B4Tid0)

/* S-Function (ASW_Schedule): '<S1>/ASWSchedule_Conf' */
%<SLibCG_DumpSSCode("/*@[15fdf*/",tlcOutputsFcnOfS18B4Tid0,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS18B5)
/* S-Function (EcoCoder_LCF_Def): '<S1>/ecoder_sfun_lcf_def' */
%<SLibCG_DumpSSCode("/*@[15fe0*/",tlcOutputsFcnOfS18B5,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS18B6)
/* S-Function (EcoCoder_CAN_Def): '<Root>/CAN Channel Definition' */
%<SLibCG_DumpSSCode("/*@[15fe1*/",tlcOutputsFcnOfS18B6,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS18B7)
/* S-Function (EcoCoder_CAN_Def): '<Root>/CAN Channel Definition1' */
%<SLibCG_DumpSSCode("/*@[15fe2*/",tlcOutputsFcnOfS18B7,"/*@]*/")>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS18B8)
/* S-Function (ecocoder_sfun_ccp21_def): '<Root>/Fixed CCP Slave Definiton' */
%<SLibCG_DumpSSCode("/*@[15fe3*/",tlcOutputsFcnOfS18B8,"/*@]*/")>\
%endif
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput0LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 1
%assign ::GlobalCurrentTID = 1
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS18B9 = OpaqueTLCBlockFcn("Outputs", 18, 9, 3, 2, 0)
%assign tlcOutputsFcnOfS18B4Tid1 = OpaqueTLCBlockFcnForTID("Outputs", 18, 4, 1, 3, 2, 1)
%assign   Outputs_open_Task_Call1_18_9 = ""
%openfile Outputs_open_Task_Call1_18_9

/* S-Function (EcoCoder_Task): '<S2>/Task_Call1' */
%closefile Outputs_open_Task_Call1_18_9

%assign    Outputs_body_Task_Call1_18_9 = ""
%openfile  Outputs_body_Task_Call1_18_9

%<SLibCG_DumpSSCode("/*@[1600f*/",tlcOutputsFcnOfS18B9,"/*@]*/")>\
%closefile Outputs_body_Task_Call1_18_9

%assign    Outputs_close_Task_Call1_18_9 = ""
%openfile  Outputs_close_Task_Call1_18_9

/* End of Outputs for S-Function (EcoCoder_Task): '<S2>/Task_Call1' */
%closefile Outputs_close_Task_Call1_18_9
%<SLibCG_DumpSSCode(Outputs_open_Task_Call1_18_9, Outputs_body_Task_Call1_18_9, Outputs_close_Task_Call1_18_9)>

%if !WHITE_SPACE(tlcOutputsFcnOfS18B4Tid1)

/* S-Function (ASW_Schedule): '<S1>/ASWSchedule_Conf' */
%<SLibCG_DumpSSCode("/*@[16010*/",tlcOutputsFcnOfS18B4Tid1,"/*@]*/")>\
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput1LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 2
%assign ::GlobalCurrentTID = 2
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS18B4Tid2 = OpaqueTLCBlockFcnForTID("Outputs", 18, 4, 2, 3, 3, 0)
%if !WHITE_SPACE(tlcOutputsFcnOfS18B4Tid2)
/* S-Function (ASW_Schedule): '<S1>/ASWSchedule_Conf' */
%<SLibCG_DumpSSCode("/*@[16014*/",tlcOutputsFcnOfS18B4Tid2,"/*@]*/")>\
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput2LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS18B4Tid3 = OpaqueTLCBlockFcnForTID("Outputs", 18, 4, 3, 3, 4, 0)
%if !WHITE_SPACE(tlcOutputsFcnOfS18B4Tid3)
/* S-Function (ASW_Schedule): '<S1>/ASWSchedule_Conf' */
%<SLibCG_DumpSSCode("/*@[16017*/",tlcOutputsFcnOfS18B4Tid3,"/*@]*/")>\
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput3LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 4
%assign ::GlobalCurrentTID = 4
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS18B4Tid4 = OpaqueTLCBlockFcnForTID("Outputs", 18, 4, 4, 3, 5, 0)
%if !WHITE_SPACE(tlcOutputsFcnOfS18B4Tid4)
/* S-Function (ASW_Schedule): '<S1>/ASWSchedule_Conf' */
%<SLibCG_DumpSSCode("/*@[1601a*/",tlcOutputsFcnOfS18B4Tid4,"/*@]*/")>\
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput4LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 5
%assign ::GlobalCurrentTID = 5
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS18B4Tid5 = OpaqueTLCBlockFcnForTID("Outputs", 18, 4, 5, 3, 6, 0)
%if !WHITE_SPACE(tlcOutputsFcnOfS18B4Tid5)
/* S-Function (ASW_Schedule): '<S1>/ASWSchedule_Conf' */
%<SLibCG_DumpSSCode("/*@[1601d*/",tlcOutputsFcnOfS18B4Tid5,"/*@]*/")>\
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput5LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 6
%assign ::GlobalCurrentTID = 6
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS18B4Tid6 = OpaqueTLCBlockFcnForTID("Outputs", 18, 4, 6, 3, 7, 0)
%if !WHITE_SPACE(tlcOutputsFcnOfS18B4Tid6)
/* S-Function (ASW_Schedule): '<S1>/ASWSchedule_Conf' */
%<SLibCG_DumpSSCode("/*@[16020*/",tlcOutputsFcnOfS18B4Tid6,"/*@]*/")>\
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput6LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 7
%assign ::GlobalCurrentTID = 7
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS18B4Tid7 = OpaqueTLCBlockFcnForTID("Outputs", 18, 4, 7, 3, 8, 0)
%if !WHITE_SPACE(tlcOutputsFcnOfS18B4Tid7)
/* S-Function (ASW_Schedule): '<S1>/ASWSchedule_Conf' */
%<SLibCG_DumpSSCode("/*@[16023*/",tlcOutputsFcnOfS18B4Tid7,"/*@]*/")>\
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput7LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 8
%assign ::GlobalCurrentTID = 8
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS18B4Tid8 = OpaqueTLCBlockFcnForTID("Outputs", 18, 4, 8, 3, 9, 0)
%if !WHITE_SPACE(tlcOutputsFcnOfS18B4Tid8)
/* S-Function (ASW_Schedule): '<S1>/ASWSchedule_Conf' */
%<SLibCG_DumpSSCode("/*@[16026*/",tlcOutputsFcnOfS18B4Tid8,"/*@]*/")>\
%endif
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput8LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction
%function OutputsFcnProtoTypeForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 1, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 1
%assign ::GlobalCurrentTID = 1
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs1(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 2, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 2
%assign ::GlobalCurrentTID = 2
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs2(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 3, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs3(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 4, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 4
%assign ::GlobalCurrentTID = 4
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs4(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 5, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 5
%assign ::GlobalCurrentTID = 5
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs5(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 6, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 6
%assign ::GlobalCurrentTID = 6
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs6(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 7, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 7
%assign ::GlobalCurrentTID = 7
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs7(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 8, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 8
%assign ::GlobalCurrentTID = 8
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs8(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 9, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction
